Search.setIndex({"docnames": [".ipynb_checkpoints/examples-checkpoint", ".ipynb_checkpoints/index-checkpoint", ".ipynb_checkpoints/maxaidatahandling-checkpoint", ".ipynb_checkpoints/maxaifeaturization.aggregation-checkpoint", ".ipynb_checkpoints/maxaifeaturization.featuretools-checkpoint", ".ipynb_checkpoints/modules-checkpoint", ".ipynb_checkpoints/quickstart-checkpoint", "examples", "index", "maxaidatahandling", "maxaifeaturization", "maxaifeaturization.aggregation", "maxaifeaturization.featuretools", "maxaifeaturization.selection", "maxaifeaturization.timeseries", "maxaifeaturization.transformation", "maxaimetadata", "maxaimodel", "maxaimodel.H2O", "maxaimodel.H2O.classification", "maxaimodel.H2O.classification.test", "maxaimodel.H2O.clustering", "maxaimodel.H2O.clustering.test", "maxaimodel.H2O.regression", "maxaimodel.H2O.unsupervised", "maxaimodel.H2O.unsupervised.test", "maxaimodel.python", "maxaimodel.python.timeseries", "maxaimodel.spark", "maxaimodel.spark.classification", "maxaimodel.spark.clustering", "maxaimodel.spark.recommendation", "maxaimodel.spark.regression", "maxaimodel.spark.timeseries", "maxairesources", "maxairesources.cleaning", "maxairesources.customer360", "maxairesources.datachecks", "maxairesources.datachecks.test", "maxairesources.ensemble", "maxairesources.eval", "maxairesources.exception", "maxairesources.factory", "maxairesources.logging", "maxairesources.model_approval", "maxairesources.optimizer", "maxairesources.pipeline", "maxairesources.utilities", "maxairesources.utilities.tests", "modules", "quickstart"], "filenames": [".ipynb_checkpoints/examples-checkpoint.rst", ".ipynb_checkpoints/index-checkpoint.rst", ".ipynb_checkpoints/maxaidatahandling-checkpoint.rst", ".ipynb_checkpoints/maxaifeaturization.aggregation-checkpoint.rst", ".ipynb_checkpoints/maxaifeaturization.featuretools-checkpoint.rst", ".ipynb_checkpoints/modules-checkpoint.rst", ".ipynb_checkpoints/quickstart-checkpoint.rst", "examples.rst", "index.rst", "maxaidatahandling.rst", "maxaifeaturization.rst", "maxaifeaturization.aggregation.rst", "maxaifeaturization.featuretools.rst", "maxaifeaturization.selection.rst", "maxaifeaturization.timeseries.rst", "maxaifeaturization.transformation.rst", "maxaimetadata.rst", "maxaimodel.rst", "maxaimodel.H2O.rst", "maxaimodel.H2O.classification.rst", "maxaimodel.H2O.classification.test.rst", "maxaimodel.H2O.clustering.rst", "maxaimodel.H2O.clustering.test.rst", "maxaimodel.H2O.regression.rst", "maxaimodel.H2O.unsupervised.rst", "maxaimodel.H2O.unsupervised.test.rst", "maxaimodel.python.rst", "maxaimodel.python.timeseries.rst", "maxaimodel.spark.rst", "maxaimodel.spark.classification.rst", "maxaimodel.spark.clustering.rst", "maxaimodel.spark.recommendation.rst", "maxaimodel.spark.regression.rst", "maxaimodel.spark.timeseries.rst", "maxairesources.rst", "maxairesources.cleaning.rst", "maxairesources.customer360.rst", "maxairesources.datachecks.rst", "maxairesources.datachecks.test.rst", "maxairesources.ensemble.rst", "maxairesources.eval.rst", "maxairesources.exception.rst", "maxairesources.factory.rst", "maxairesources.logging.rst", "maxairesources.model_approval.rst", "maxairesources.optimizer.rst", "maxairesources.pipeline.rst", "maxairesources.utilities.rst", "maxairesources.utilities.tests.rst", "modules.rst", "quickstart.rst"], "titles": ["Examples", "Welcome to Max.AI\u2019s documentation!", "maxaidatahandling package", "maxaifeaturization.aggregation package", "maxaifeaturization.featuretools package", "max.ai.ds.core", "Quickstart", "Examples", "Welcome to Max.AI\u2019s documentation!", "maxaidatahandling package", "maxaifeaturization package", "maxaifeaturization.aggregation package", "maxaifeaturization.featuretools package", "maxaifeaturization.selection package", "maxaifeaturization.timeseries package", "maxaifeaturization.transformation package", "maxaimetadata package", "maxaimodel package", "maxaimodel.H2O package", "maxaimodel.H2O.classification package", "maxaimodel.H2O.classification.test package", "maxaimodel.H2O.clustering package", "maxaimodel.H2O.clustering.test package", "maxaimodel.H2O.regression package", "maxaimodel.H2O.unsupervised package", "maxaimodel.H2O.unsupervised.test package", "maxaimodel.python package", "maxaimodel.python.timeseries package", "maxaimodel.spark package", "maxaimodel.spark.classification package", "maxaimodel.spark.clustering package", "maxaimodel.spark.recommendation package", "maxaimodel.spark.regression package", "maxaimodel.spark.timeseries package", "maxairesources package", "maxairesources.cleaning package", "maxairesources.customer360 package", "maxairesources.datachecks package", "maxairesources.datachecks.test package", "maxairesources.ensemble package", "maxairesources.eval package", "maxairesources.exception package", "maxairesources.factory package", "maxairesources.logging package", "maxairesources.model_approval package", "maxairesources.optimizer package", "maxairesources.pipeline package", "maxairesources.utilities package", "maxairesources.utilities.tests package", "max.ai.ds.core", "Quickstart"], "terms": {"provid": [1, 8, 36, 39], "readi": [1, 8], "list": [1, 3, 8, 11, 15, 27, 35, 36, 37, 39, 47], "util": [1, 8, 34, 49], "creat": [1, 8], "end": [1, 8], "ml": [1, 8], "pipelin": [1, 8, 34, 37, 49], "solv": [1, 8], "complex": [1, 8], "busi": [1, 8], "problem": [1, 8], "us": [1, 6, 8, 15, 23, 24, 27, 33, 35, 36, 37, 39, 47, 50], "state": [1, 8], "art": [1, 8], "modul": [1, 8, 49], "come": [1, 8, 37], "equip": [1, 8], "store": [1, 8], "process": [1, 8, 34, 35, 43, 47], "transform": [1, 8, 10, 46, 49], "data": [1, 8, 15, 16, 27, 33, 37, 39, 41, 47], "autom": [1, 8], "featur": [1, 3, 8, 11, 41], "engineeri": [1, 8], "host": [1, 8], "model": [1, 8, 16, 23, 24, 27, 33, 40, 41, 42, 44, 47], "classif": [1, 8, 17, 18, 28], "cluster": [1, 8, 17, 18, 28], "regress": [1, 8, 17, 18, 28, 40], "time": [1, 8, 14, 27, 33, 37, 47], "seri": [1, 8, 14, 27, 33, 37, 47], "much": [1, 8], "more": [1, 8], "you": [1, 8, 43], "can": [1, 8, 43], "refer": [1, 8, 27, 33], "how": [1, 8], "quickstart": [1, 8], "instal": [1, 6, 8, 50], "your": [1, 8, 43], "project": [1, 8, 16], "index": [1, 8, 15], "search": [1, 8, 23, 24, 27], "page": [1, 8], "class": [3, 11, 14, 15, 16, 19, 21, 23, 24, 27, 33, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47], "df": [3, 11, 14, 15, 27, 33, 35, 36, 37, 47], "argument": [3, 11, 15, 36, 43, 46, 47], "sourc": [3, 11, 14, 15, 16, 19, 21, 23, 24, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47], "base": [3, 11, 14, 15, 16, 19, 21, 23, 24, 27, 33, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47], "object": [3, 11, 14, 15, 16, 33, 35, 37, 39, 40, 42, 44, 46, 47], "perform": [3, 11, 14, 15, 27, 37, 44, 47], "oper": [3, 11, 14, 15, 36, 47], "pass": [3, 11, 15, 43, 47], "datafram": [3, 11, 14, 15, 27, 35, 37, 40, 44, 47], "arg": [3, 11, 14, 15, 27, 33, 36, 42, 43, 47], "spark": [3, 11, 14, 15, 17, 27, 37, 46, 47, 49], "which": [3, 11, 14, 15, 27, 35, 36, 37, 47], "ar": [3, 11, 15, 27, 35, 41, 44, 47], "dict": [3, 11, 15, 16, 27, 33, 36, 37, 40, 42, 44, 47], "dictionari": [3, 11, 27, 36, 37, 47], "contain": [3, 11, 47], "feature_nam": [3, 11], "output_column_nam": [3, 11], "kei": [3, 11, 16, 37, 47], "int": [3, 11, 14, 27, 36, 37, 47], "sum": [3, 11, 39], "averag": [3, 11, 39], "etc": [3, 11, 27], "avail": [3, 11, 27], "1": [3, 6, 11, 14, 15, 33, 37, 47, 50], "2": [3, 11, 14, 15, 39, 47], "mean": [3, 11, 35], "3": [3, 11, 15, 37], "stddev": [3, 11, 37], "4": [3, 11, 15], "max": [3, 11, 16], "5": [3, 11, 15, 39], "min": [3, 11], "6": [3, 11, 15, 36], "count": [3, 11], "7": [3, 11, 15, 36], "count_distinct": [3, 11], "8": [3, 11, 15, 39, 47], "varianc": [3, 11], "9": [3, 11, 15], "percentil": [3, 11], "10": [3, 11, 15, 27, 33, 37, 43], "quantil": [3, 11], "11": [3, 11, 15], "median": [3, 11, 35], "12": [3, 11, 15], "most_frequ": [3, 11], "name": [3, 11, 14, 15, 16, 27, 33, 42, 43, 46, 47], "i": [3, 11, 14, 15, 27, 35, 37, 41, 44, 47], "accept": [3, 11], "onli": [3, 11, 27, 43], "one": [3, 11, 15, 43], "input": [3, 11, 15, 33, 35, 36, 39, 47], "output": [3, 11, 36, 39, 44, 47], "column": [3, 11, 14, 15, 27, 33, 35, 36, 37, 39, 47], "gener": [3, 11, 35, 37], "post": [3, 11], "exampl": [3, 11, 14, 33, 43, 47], "from": [3, 11, 33, 35, 37, 40, 43, 46], "import": [3, 11, 14, 33, 41, 42, 43, 47], "read": [3, 11, 35], "csv": [3, 11], "filepath": [3, 11], "file": [3, 11, 35, 43], "agg_dict": [3, 11], "entity_column": [3, 11], "customer_id": [3, 11, 36, 47], "aggregation_op": [3, 11], "total_revenu": [3, 11], "mean_rev": [3, 11], "max_rev": [3, 11], "agg_obj": [3, 11], "agg_df": [3, 11], "execut": [3, 10, 11, 15, 47], "driver": [3, 11, 15], "method": [3, 11, 14, 15, 27, 33, 35, 37, 39, 41, 42, 43, 47], "return": [3, 11, 14, 15, 27, 33, 35, 36, 37, 39, 40, 42, 43, 44, 46, 47], "constant": [3, 10, 11, 15], "operation_dict": [3, 10, 11, 15], "To": [6, 50], "maxai": [6, 50], "first": [6, 50], "pip": [6, 50], "0": [6, 14, 33, 37, 39, 47, 50], "py3": [6, 50], "none": [6, 16, 27, 33, 37, 39, 42, 44, 46, 47, 50], "ani": [6, 15, 50], "egg": [6, 50], "aggreg": [10, 36, 47, 49], "submodul": [10, 17, 18, 26, 28, 49], "featuretool": [10, 49], "select": [10, 27, 33, 49], "model_based_selector": [10, 49], "selector": [10, 49], "timeseri": [10, 17, 26, 28, 49], "univari": [10, 49], "decompos": [10, 14], "loess": [10, 14], "moving_averag": [10, 14], "stationaritytest": [10, 14], "adf": [10, 14], "kpss": [10, 14], "autocorrel": [10, 14], "check_stationar": [10, 14], "time_series_decomposit": [10, 14], "datetimetransform": [10, 15], "convert_to_iso8601": [10, 15], "filter": [10, 15, 36, 47], "numtransform": [10, 15], "exp": [10, 15, 16], "log": [10, 15, 34, 49], "reciproc": [10, 15], "zscore": [10, 15], "strtransform": [10, 15], "alter_cas": [10, 15], "concat_column": [10, 15], "one_hot_encod": [10, 15], "split_column": [10, 15], "string_index": [10, 15], "trim_whitespac": [10, 15], "decode_transform": [10, 15], "unpack_kwarg": [10, 15], "window": [10, 49], "static": [14, 15, 33, 47], "kwarg": [14, 15, 16, 42, 43, 44, 46, 47], "pandas_df": 14, "value_col": 14, "spark_df": [14, 33, 47], "groupby_col": [14, 33, 36, 47], "datetime_col": 14, "nlag": 14, "partial": 14, "fals": [14, 16, 37, 42, 44, 47], "comput": [14, 15], "pearson": 14, "correl": [14, 37], "between": 14, "its": 14, "shift": 14, "self": 14, "str": [14, 15, 16, 27, 33, 37, 40, 42, 47], "entiti": 14, "defin": [14, 15, 27, 36, 41, 47], "datetim": [14, 15, 27, 33], "valu": [14, 15, 16, 27, 33, 35, 37, 44, 47], "quantiti": 14, "number": [14, 37, 47], "lag": [14, 27], "calcul": [14, 15, 39], "bool": [14, 15, 37, 42, 44], "true": [14, 33, 36, 37, 42, 44, 47], "rais": [14, 15, 37, 41], "valueerror": [14, 15], "each": [14, 15], "group": 14, "panda": [14, 47], "pd": [14, 27], "a1": 14, "b2": 14, "c3": 14, "d4": 14, "e5": 14, "data_list": 14, "date_list": 14, "entity_list": 14, "rang": [14, 35], "100": [14, 47], "sin_val": 14, "np": 14, "sin": 14, "random": [14, 47], "rand": 14, "date_v": 14, "2022": 14, "timedelta": 14, "dai": 14, "append": [14, 37, 47], "machine_id": 14, "date": [14, 33, 35], "sensor_read": 14, "createdatafram": 14, "abdf": 14, "test": [14, 18, 19, 21, 24, 34, 37, 44, 47], "ddf": 14, "z": 15, "score": [15, 37], "box": 15, "cox": 15, "bin": 15, "string": [15, 33, 46], "hot": 15, "encod": 15, "concat": 15, "delimit": 15, "split": [15, 47], "uppercas": 15, "13": 15, "lowercas": 15, "14": [15, 36], "trim": 15, "15": 15, "timestr": 15, "iso8601": 15, "16": 15, "epoch": 15, "17": 15, "extract": 15, "datepart": 15, "col_nam": [15, 35], "is_epoch": 15, "convert": [15, 35, 36, 47], "iso": 15, "8601": 15, "format": [15, 35, 36, 37], "assumpt": 15, "should": [15, 37, 39, 47], "upto": 15, "second": 15, "level": [15, 43], "e": [15, 27], "digit": 15, "pyspark": [15, 33, 47], "unix": 15, "type": [15, 16, 27, 35, 36, 37, 41, 42], "column_nam": [15, 36], "filter_rul": 15, "rule_express": 15, "rule": 15, "paramet": [15, 27, 33, 36, 47], "enclos": 15, "all": [15, 35, 36, 37, 39, 42, 44, 46, 47], "numer": [15, 35, 37], "camput": 15, "exponenti": 15, "given": [15, 37, 47], "except": [15, 34, 49], "incorrectdatatypeerror": 15, "when": [15, 27, 41], "datatyp": 15, "logarithm": 15, "natur": 15, "neg": 15, "zero": 15, "encount": 15, "case": 15, "alter": 15, "decid": 15, "col_list": 15, "concaten": 15, "two": [15, 37, 39, 47], "default": 15, "map": 15, "categori": 15, "indic": 15, "binari": [15, 40], "vector": 15, "dtype": 15, "A": [15, 33, 37, 46, 47], "label": [15, 39, 40, 47], "remov": [15, 35, 37], "whitespac": 15, "columnar": 15, "databas": 15, "sql": 15, "transform_op": 15, "call": [15, 37, 43, 47], "apt": 15, "todo": [15, 37], "unpack": 15, "keyword": [15, 43, 47], "gracefulli": 15, "uri": 16, "mlrun": 16, "usr": 16, "option": [16, 27, 33, 37, 44, 47], "pwd": 16, "ai": 16, "wrapper": [16, 27, 33, 47], "mlflow": 16, "auto_log": [16, 49], "log_model": [16, 49], "classmethod": [16, 42], "get_active_flow": [16, 49], "get_active_run": [16, 49], "get_registered_model": [16, 49], "stage": 16, "register_model": [16, 34, 42, 49], "run": [16, 33, 47], "recurs": [16, 37, 42], "run_id": 16, "set_experi": [16, 49], "experi": [16, 37], "repo_path": 16, "start_run": [16, 49], "descript": 16, "stop": [16, 49], "maxrun": [16, 49], "end_run": [16, 49], "log_artifact": [16, 49], "local_path": 16, "artifact_path": 16, "local_dir": 16, "log_data": [16, 49], "feature_view": 16, "log_dict": [16, 49], "file_nam": 16, "log_figur": [16, 49], "figur": 16, "artifact_fil": 16, "log_metr": [16, 49], "metric": [16, 27, 33], "log_param": [16, 49], "param": [16, 19, 21, 23, 24, 27, 33, 42, 44, 47], "set_act": [16, 49], "set_tag": [16, 49], "tag": 16, "start_child_run": [16, 49], "h2o": [17, 49], "h2o_dl": [17, 18], "h2o_drf": [17, 18], "h2o_gam": [17, 18], "h2o_gbm": [17, 18], "h2o_glm": [17, 18], "h2o_rf": [17, 18], "h2o_xgb": [17, 18], "h2o_kmean": [17, 18], "h2o_dl_regressor": [17, 18], "h2o_drf_regressor": [17, 18], "h2o_gam_regressor": [17, 18], "h2o_gbm_regressor": [17, 18], "h2o_glm_regressor": [17, 18], "h2o_rulefit_regressor": [17, 18], "h2o_xgb_regressor": [17, 18], "unsupervis": [17, 18], "h2o_isolation_forest": [17, 18], "h2o_pca": [17, 18], "python": [17, 33, 47, 49], "arima": [17, 26, 33], "garch": [17, 26, 33], "neuroprophet": [17, 26], "prophet": [17, 26, 33], "spark_dt": [17, 28], "spark_fmc": [17, 28], "spark_gbt": [17, 28], "spark_lr": [17, 28], "spark_mlp": [17, 28], "spark_nb": [17, 28], "spark_ovr": [17, 28], "spark_rf": [17, 28], "spark_svc": [17, 28], "spark_hvt": [17, 28], "spark_kmean": [17, 28], "recommend": [17, 28], "spark_al": [17, 28], "spark_aft_survival_regress": [17, 28], "spark_dt_regress": [17, 28], "spark_fm_regress": [17, 28], "spark_gbt_regress": [17, 28], "spark_gl_regress": [17, 28], "spark_isotonic_regress": [17, 28], "spark_linear_regress": [17, 28], "spark_rf_regress": [17, 28], "spark_t": [17, 28], "xgb_t": [17, 28], "test_classif": [18, 19], "h2odlclassifi": [18, 19], "build": [18, 19, 21, 23, 24, 26, 27, 28, 33], "h2odrfclassifi": [18, 19], "h2ogamclassifi": [18, 19], "h2ogbmclassifi": [18, 19], "h2oglmclassifi": [18, 19], "h2oxgbclassifi": [18, 19], "test_clust": [18, 21], "h2okmeansclust": [18, 21], "h2odlregressor": [18, 23], "h2odrfregressor": [18, 23], "h2ogamregressor": [18, 23], "optimise_model": [18, 23, 24], "h2ogbmregressor": [18, 23], "h2oglmregressor": [18, 23], "h2oxgbregressor": [18, 23], "test_unsupervis": [18, 24], "h2oisolationforestmax": [18, 24], "id_col": [19, 21, 23, 24], "target_col": [19, 21, 23, 24, 27, 33], "param_grid": [19, 21, 23, 24, 27, 33], "h2oclassifierbasemodel": 19, "h2ounsupervisedbasemodel": [21, 24], "h2oregressorbasemodel": 23, "optimis": [23, 24], "grid": [23, 24, 27], "fit": [26, 27, 28, 33], "get_model_diagnost": [26, 27, 28, 33], "get_param": [26, 27, 28, 33], "load": [26, 27, 28, 33, 41], "predict": [26, 27, 28, 33, 34, 39, 40, 44, 47], "save": [26, 27, 28, 33, 37, 41], "training_framework": [26, 27], "nprophet": [26, 27, 33], "get_event_df": [26, 27], "fbprophet": [26, 27], "get_holiday_df": [26, 27], "time_col": [27, 33], "val_period": 27, "mean_squared_error": [27, 33], "exog_col": 27, "basemodel": [27, 33, 42, 44], "act": 27, "basic": 27, "interfac": 27, "captur": 27, "attribut": 27, "forecast": 27, "hyperparamet": 27, "Not": 27, "requir": 27, "valid": [27, 37], "period": [27, 33, 47], "dure": 27, "tune": [27, 33], "phase": 27, "sklearn": 27, "g": 27, "rmse": 27, "add": 27, "exogen": 27, "variabl": [27, 41], "estim": [27, 33, 46], "after": [27, 33, 47], "ha": [27, 33], "been": [27, 33], "freq": [27, 33], "step": 27, "made": 27, "frequenc": [27, 33], "daili": 27, "d": 27, "monthli": 27, "m": [27, 36], "being": 27, "forecast_df": 27, "path": [27, 33, 35, 37, 47], "auto": 27, "event": [27, 47], "future_regressor": 27, "lag_regressor": 27, "custom_season": 27, "neuralprophet": [27, 33], "http": 27, "com": 27, "html": 27, "For": [27, 33], "complet": 27, "extern": 27, "have": [27, 37], "known": 27, "futur": 27, "regressor": [27, 39], "net": 27, "enabl": 27, "custom": 27, "season": 27, "holidai": 27, "holiday_countri": 27, "extra_regressor": 27, "facebook": 27, "github": 27, "io": 27, "doc": 27, "_holiday_effect": 27, "_and_regressor": 27, "countri": 27, "extra": [27, 43], "sparktsforecast": [28, 33], "dataprep": [28, 33], "increment_datetim": [28, 33], "infer_frequ": [28, 33], "prepare_data": [28, 33], "xgbforecast": [28, 33], "grp_by_col": 33, "base_model": [33, 39], "model_param": 33, "worker": 33, "distribut": [33, 47], "train": [33, 47], "instanc": [33, 37], "see": 33, "definit": 33, "t": [33, 39, 47], "dept": 33, "weekly_sal": 33, "yearly_season": 33, "seasonality_mod": 33, "addit": [33, 37], "multipl": [33, 47], "learning_r": 33, "01": 33, "02": 33, "03": 33, "05": 33, "w": 33, "sales_df": 33, "resultant_df": 33, "24": 33, "get": [33, 37, 43, 44, 46], "interv": 33, "date_col": 33, "pdf": 33, "window_s": 33, "n_forecast": 33, "num_round": 33, "clean": [34, 49], "noiseremov": [34, 49], "convert_timeformat": [34, 35], "determine_outlier_thersholds_std": [34, 35], "determine_outlier_thresholds_iqr": [34, 35], "drop_dupl": [34, 35], "impute_nul": [34, 35], "outlier_detect": [34, 35], "read_config": [34, 35], "remove_outli": [34, 35], "customer360": [34, 49], "column_renam": [34, 36], "create_featur": [34, 36], "parse_argu": [34, 36], "prepare_agg_argu": [34, 36], "todatetyp": [34, 36], "datacheck": [34, 35, 49], "test_dataframe_analysis_spark": [34, 37], "analysis_bas": [34, 49], "analysisbas": [34, 37], "compare_report": [34, 37], "generate_data_health_report": [34, 37], "get_column_typ": [34, 37], "save_analysis_report": [34, 37], "validate_report": [34, 37], "dataframe_analysis_spark": [34, 49], "sparkdataframeanalys": [34, 37], "default_behaviour": [34, 37], "default_threshold": [34, 37], "ensembl": [34, 49], "votingclassifi": [34, 39], "votingregressor": [34, 39], "eval": [34, 49], "classifier_evaluator_spark": [34, 49], "classifierevalu": [34, 40], "get_evaluation_report": [34, 40], "model_evalu": [34, 49], "regressor_evaluator_spark": [34, 49], "regressorevalu": [34, 40], "general_regression_report_spark": [34, 40], "datasourcenotdefinederror": [34, 41], "featuretransformexcept": [34, 41], "maxaiexcept": [34, 41], "geterrormessag": [34, 41], "missingenvironmentvari": [34, 41], "modelloadexcept": [34, 41], "modelnotimpl": [34, 41], "modelsaveexcept": [34, 41], "modeltrainexcept": [34, 41], "modeltypenotdefinedexcept": [34, 41], "portinformationnotfounderror": [34, 41], "unknownoperationmod": [34, 41], "factori": [34, 46, 49], "model_factori": [34, 49], "modelfactori": [34, 42], "get_model": [34, 42], "import_submodul": [34, 42], "logger": [34, 49], "customadapt": [34, 43], "get_file_handl": [34, 43], "get_logg": [34, 43], "get_stream_handl": [34, 43], "model_approv": [34, 49], "model_approver_spark": [34, 49], "modelapprov": [34, 44], "is_above_threshold": [34, 44], "optim": [34, 49], "param_optim": [34, 49], "pipeline_factori": [34, 49], "sparktransformerfactori": [34, 46], "get_transform": [34, 46], "register_transform": [34, 46], "spark_pipelin": [34, 49], "test_data_connector": [34, 47], "test_multi_train": [34, 47], "test_spark_distributor": [34, 47], "test_train_test_split": [34, 47], "common_util": [34, 49], "write_file_to_s3": [34, 47], "data_connector": [34, 49], "encrypt": [34, 49], "decrypt": [34, 47], "decrypt_column": [34, 47], "encrypt_column": [34, 47], "misc": [34, 49], "get_run_id_timestamp": [34, 47], "overwrite_dict": [34, 47], "multi_train": [34, 49], "multitrain": [34, 47], "train_model": [34, 47], "trained_model": [34, 47], "preprocess": [34, 49], "aggregate_transactional_data": [34, 47], "spark_distributor": [34, 49], "sparkdistributor": [34, 47], "pandas_to_spark_wrapp": [34, 47], "train_test_split": [34, 49], "traintestsplit": [34, 47], "random_split": [34, 47], "stratified_split": [34, 47], "time_series_split": [34, 47], "timeformat": 35, "utc": 35, "dataset": [35, 49], "approach": 35, "timestamp": [35, 47], "drop": 35, "duplic": 35, "row": 35, "null": [35, 36], "we": [35, 39], "config": [35, 36], "percentag": 35, "skew": 35, "featu": 35, "imput": 35, "symmetr": 35, "asymmetr": 35, "free": 35, "iqr": 35, "outlier": [35, 37], "cap": 35, "standard": 35, "deviat": [35, 37], "dframe": 36, "groupbycol": 36, "function": [36, 43, 46, 47], "pars": 36, "perpar": 36, "signal": 36, "json": [36, 37], "hold": 36, "inform": [36, 43], "singnal": 36, "arguments_without_ev": 36, "arguments_with_ev": 36, "sampl": [36, 39, 47], "agg_col": [36, 47], "mkt_channel_nam": 36, "event_col": 36, "time_period": [36, 47], "transact": [36, 47], "offer_id": 36, "time_column": 36, "time_differ": 36, "event_column": [36, 47], "data_typ": 36, "updated_nam": 36, "i_count_distinct_offer_id_7_dai": 36, "last_7_transact": 36, "i_count_distinct_offer_id_last_7_transact": 36, "i_count_distinct_offer_id_14_dai": 36, "last_14_transact": 36, "i_count_distinct_offer_id_last_14_transact": 36, "i_count_mkt_channel_name_7_dai": 36, "i_count_mkt_channel_name_last_7_transact": 36, "yyyi": 36, "dd": 36, "datetyp": 36, "conftest": [37, 49], "test_binary_classification_report_spark": [37, 38], "analysi": 37, "thi": [37, 43], "text": 37, "categor": 37, "updat": 37, "per": [37, 43], "imag": 37, "nn": 37, "everi": 37, "report": [37, 40], "correct": 37, "form": 37, "comparison": 37, "compar": 37, "abstract": 37, "old_report": 37, "new_report": 37, "same": [37, 47], "scope": 37, "criteria": 37, "dedic": 37, "keep": 37, "main": 37, "copi": 37, "identifi": 37, "destination_path": 37, "in_scope_column": 37, "summary_onli": 37, "save_report": 37, "column_typ": 37, "threshold": [37, 39, 44], "behaviour": 37, "sample_ratio": 37, "float": [37, 47], "analys": 37, "singl": 37, "intend": 37, "show": [37, 43, 47], "red": 37, "flag": 37, "": 37, "threshold_chang": 37, "increas": [37, 47], "decreas": 37, "certain": 37, "warn": 37, "chang": 37, "place": 37, "where": 37, "observ": 37, "ad": [37, 46], "intern": [37, 42], "insid": 37, "bi_vari": 37, "uni_vari": 37, "unique_categori": 37, "numerical_summari": 37, "null_percentag": 37, "kurtosis_scor": 37, "skewness_scor": 37, "id_column_check": 37, "categories_distribut": 37, "balanced_bool": 37, "correlation_scor": 37, "column_count": 37, "50": 37, "record_count": 37, "300000": 37, "boolean_bal": 37, "outlier_percentag": 37, "unique_categories_count": 37, "api": 37, "last": 37, "minut": 37, "check": [37, 44], "infer": [37, 47], "field": 37, "sample_feast_dataframe_for_analysi": 38, "hard": 39, "weight": 39, "testdata": 39, "soft": 39, "note": 39, "The": [39, 42, 47], "cummul": 39, "fun": 39, "consist": 39, "three": [39, 47], "vote": 39, "mode": 39, "across": 39, "classifi": [39, 40], "combin": 39, "here": 39, "user": [39, 47], "doesn": 39, "enter": 39, "uniform": 39, "probabl": [39, 40], "col": 39, "predicted_actual_pdf": [40, 44], "predicted_col": 40, "label_col": 40, "probability_col": 40, "classification_mod": 40, "multiclass": 40, "baseevalu": 40, "separ": 40, "implement": [40, 41], "messag": [41, 43], "particular": 41, "export": 41, "tansform": 41, "an": 41, "environ": 41, "miss": 41, "tain": 41, "port": 41, "detail": 41, "found": 41, "send_class": 42, "callabl": 42, "regist": [42, 46], "registri": [42, 46], "executor": 42, "itself": [42, 43], "includ": 42, "subpackag": [42, 49], "actual": [42, 44], "rtype": 42, "moduletyp": 42, "loggeradapt": 43, "__name__": 43, "debug": 43, "f": 43, "msg": [43, 47], "insert": 43, "contextu": 43, "either": 43, "manipul": 43, "both": 43, "modifi": 43, "suit": 43, "need": [43, 47], "normal": 43, "ll": 43, "overrid": 43, "subclass": 43, "specif": 43, "filenam": 43, "run_detail": 43, "handler": 43, "stream": 43, "termin": 43, "evaluator_class": 44, "metric_threshold": 44, "v": 44, "kpi": 44, "abov": 44, "minimum": 44, "pair": 44, "good": 44, "enough": 44, "about": 44, "els": 44, "support": [46, 47], "cipher": 47, "df_type": 47, "mykei": 47, "prefix": 47, "f_": 47, "uniqu": 47, "id": 47, "d1": 47, "d2": 47, "overwrit": 47, "nest": 47, "parallel": 47, "predcit": 47, "givem": 47, "properti": 47, "cross": 47, "section": 47, "appli": 47, "pre": 47, "groupbi": 47, "done": 47, "befor": 47, "find": 47, "item": 47, "preprocessed_df": 47, "product": 47, "revenu": 47, "60": 47, "30": 47, "appropri": 47, "python_funct": 47, "spark_datafram": 47, "sample_s": 47, "output_schema": 47, "group_kei": 47, "mainli": 47, "written": 47, "take": 47, "record": 47, "directli": 47, "schema": 47, "final": 47, "size": 47, "abl": 47, "If": 47, "tri": 47, "specifi": 47, "do": 47, "groubi": 47, "partit": 47, "repartit": 47, "spark_wrapp": 47, "result": 47, "train_siz": 47, "random_st": 47, "stratifi": 47, "seed": 47, "123": 47, "happend": 47, "ratio": 47, "reproduc": 47, "fraction": 47, "frac": 47, "join_on": 47, "maxaidatahandl": 49, "packag": 49, "data_evalu": 49, "datafactori": 49, "content": 49, "maxaifeatur": 49, "maxaimetadata": 49, "maxflow": 49, "test_maxflow": 49, "maxaimodel": 49, "maxairesourc": 49}, "objects": {"": [[9, 0, 0, "-", "maxaidatahandling"], [10, 0, 0, "-", "maxaifeaturization"], [16, 0, 0, "-", "maxaimetadata"], [17, 0, 0, "-", "maxaimodel"], [34, 0, 0, "-", "maxairesources"]], "maxaifeaturization": [[11, 0, 0, "-", "aggregation"], [12, 0, 0, "-", "featuretools"], [13, 0, 0, "-", "selection"], [14, 0, 0, "-", "timeseries"], [15, 0, 0, "-", "transformation"]], "maxaifeaturization.aggregation": [[11, 0, 0, "-", "aggregation"]], "maxaifeaturization.aggregation.aggregation": [[11, 1, 1, "", "Aggregation"], [11, 1, 1, "", "Constants"]], "maxaifeaturization.aggregation.aggregation.Aggregation": [[11, 2, 1, "", "execute"]], "maxaifeaturization.aggregation.aggregation.Constants": [[11, 3, 1, "", "operation_dict"]], "maxaifeaturization.timeseries": [[14, 0, 0, "-", "univariate"]], "maxaifeaturization.timeseries.univariate": [[14, 1, 1, "", "Decompose"], [14, 1, 1, "", "StationarityTest"], [14, 4, 1, "", "autocorrelation"], [14, 4, 1, "", "check_stationarity"], [14, 4, 1, "", "time_series_decomposition"]], "maxaifeaturization.timeseries.univariate.Decompose": [[14, 2, 1, "", "loess"], [14, 2, 1, "", "moving_average"]], "maxaifeaturization.timeseries.univariate.StationarityTest": [[14, 2, 1, "", "adf"], [14, 2, 1, "", "kpss"]], "maxaifeaturization.transformation": [[15, 0, 0, "-", "transform"]], "maxaifeaturization.transformation.transform": [[15, 1, 1, "", "Constants"], [15, 1, 1, "", "DateTimeTransform"], [15, 1, 1, "", "Filter"], [15, 1, 1, "", "NumTransforms"], [15, 1, 1, "", "StrTransforms"], [15, 1, 1, "", "Transformation"], [15, 4, 1, "", "unpack_kwargs"]], "maxaifeaturization.transformation.transform.Constants": [[15, 3, 1, "", "operation_dict"]], "maxaifeaturization.transformation.transform.DateTimeTransform": [[15, 2, 1, "", "convert_to_iso8601"]], "maxaifeaturization.transformation.transform.Filter": [[15, 2, 1, "", "execute"]], "maxaifeaturization.transformation.transform.NumTransforms": [[15, 2, 1, "", "exp"], [15, 2, 1, "", "log"], [15, 2, 1, "", "reciprocal"], [15, 2, 1, "", "zscore"]], "maxaifeaturization.transformation.transform.StrTransforms": [[15, 2, 1, "", "alter_case"], [15, 2, 1, "", "concat_columns"], [15, 2, 1, "", "one_hot_encoder"], [15, 2, 1, "", "split_column"], [15, 2, 1, "", "string_indexer"], [15, 2, 1, "", "trim_whitespaces"]], "maxaifeaturization.transformation.transform.Transformation": [[15, 2, 1, "", "decode_transformation"], [15, 2, 1, "", "execute"]], "maxaimetadata": [[16, 0, 0, "-", "maxflow"]], "maxaimetadata.maxflow": [[16, 1, 1, "", "MaxFlow"], [16, 1, 1, "", "MaxRun"]], "maxaimetadata.maxflow.MaxFlow": [[16, 2, 1, "", "auto_log"], [16, 2, 1, "", "get_active_flow"], [16, 2, 1, "", "get_active_run"], [16, 2, 1, "", "get_registered_model"], [16, 2, 1, "", "register_model"], [16, 2, 1, "", "set_experiment"], [16, 2, 1, "", "start_run"], [16, 2, 1, "", "stop"]], "maxaimetadata.maxflow.MaxRun": [[16, 2, 1, "", "end_run"], [16, 2, 1, "", "log_artifact"], [16, 2, 1, "", "log_artifacts"], [16, 2, 1, "", "log_data"], [16, 2, 1, "", "log_dict"], [16, 2, 1, "", "log_figure"], [16, 2, 1, "", "log_metric"], [16, 2, 1, "", "log_metrics"], [16, 2, 1, "", "log_model"], [16, 2, 1, "", "log_param"], [16, 2, 1, "", "log_params"], [16, 2, 1, "", "set_active"], [16, 2, 1, "", "set_tag"], [16, 2, 1, "", "set_tags"], [16, 2, 1, "", "start_child_run"]], "maxaimodel": [[18, 0, 0, "-", "H2O"], [26, 0, 0, "-", "python"], [28, 0, 0, "-", "spark"]], "maxaimodel.H2O": [[19, 0, 0, "-", "classification"], [21, 0, 0, "-", "clustering"], [23, 0, 0, "-", "regression"], [24, 0, 0, "-", "unsupervised"]], "maxaimodel.H2O.classification": [[19, 0, 0, "-", "h2o_dl"], [19, 0, 0, "-", "h2o_drf"], [19, 0, 0, "-", "h2o_gam"], [19, 0, 0, "-", "h2o_gbm"], [19, 0, 0, "-", "h2o_glm"], [19, 0, 0, "-", "h2o_xgb"], [20, 0, 0, "-", "test"]], "maxaimodel.H2O.classification.h2o_dl": [[19, 1, 1, "", "H2ODLClassifier"]], "maxaimodel.H2O.classification.h2o_dl.H2ODLClassifier": [[19, 2, 1, "", "build"]], "maxaimodel.H2O.classification.h2o_drf": [[19, 1, 1, "", "H2ODRFClassifier"]], "maxaimodel.H2O.classification.h2o_drf.H2ODRFClassifier": [[19, 2, 1, "", "build"]], "maxaimodel.H2O.classification.h2o_gam": [[19, 1, 1, "", "H2OGAMClassifier"]], "maxaimodel.H2O.classification.h2o_gam.H2OGAMClassifier": [[19, 2, 1, "", "build"]], "maxaimodel.H2O.classification.h2o_gbm": [[19, 1, 1, "", "H2OGBMClassifier"]], "maxaimodel.H2O.classification.h2o_gbm.H2OGBMClassifier": [[19, 2, 1, "", "build"]], "maxaimodel.H2O.classification.h2o_glm": [[19, 1, 1, "", "H2OGLMClassifier"]], "maxaimodel.H2O.classification.h2o_glm.H2OGLMClassifier": [[19, 2, 1, "", "build"]], "maxaimodel.H2O.classification.h2o_xgb": [[19, 1, 1, "", "H2OXGBClassifier"]], "maxaimodel.H2O.classification.h2o_xgb.H2OXGBClassifier": [[19, 2, 1, "", "build"]], "maxaimodel.H2O.clustering": [[21, 0, 0, "-", "h2o_kmeans"], [22, 0, 0, "-", "test"]], "maxaimodel.H2O.clustering.h2o_kmeans": [[21, 1, 1, "", "H2OKmeansClustering"]], "maxaimodel.H2O.clustering.h2o_kmeans.H2OKmeansClustering": [[21, 2, 1, "", "build"]], "maxaimodel.H2O.regression": [[23, 0, 0, "-", "h2o_dl_regressor"], [23, 0, 0, "-", "h2o_drf_regressor"], [23, 0, 0, "-", "h2o_gam_regressor"], [23, 0, 0, "-", "h2o_gbm_regressor"], [23, 0, 0, "-", "h2o_glm_regressor"], [23, 0, 0, "-", "h2o_xgb_regressor"]], "maxaimodel.H2O.regression.h2o_dl_regressor": [[23, 1, 1, "", "H2ODLRegressor"]], "maxaimodel.H2O.regression.h2o_dl_regressor.H2ODLRegressor": [[23, 2, 1, "", "build"]], "maxaimodel.H2O.regression.h2o_drf_regressor": [[23, 1, 1, "", "H2ODRFRegressor"]], "maxaimodel.H2O.regression.h2o_drf_regressor.H2ODRFRegressor": [[23, 2, 1, "", "build"]], "maxaimodel.H2O.regression.h2o_gam_regressor": [[23, 1, 1, "", "H2OGAMRegressor"]], "maxaimodel.H2O.regression.h2o_gam_regressor.H2OGAMRegressor": [[23, 2, 1, "", "build"], [23, 2, 1, "", "optimise_model"]], "maxaimodel.H2O.regression.h2o_gbm_regressor": [[23, 1, 1, "", "H2OGBMRegressor"]], "maxaimodel.H2O.regression.h2o_gbm_regressor.H2OGBMRegressor": [[23, 2, 1, "", "build"]], "maxaimodel.H2O.regression.h2o_glm_regressor": [[23, 1, 1, "", "H2OGLMRegressor"]], "maxaimodel.H2O.regression.h2o_glm_regressor.H2OGLMRegressor": [[23, 2, 1, "", "build"]], "maxaimodel.H2O.regression.h2o_xgb_regressor": [[23, 1, 1, "", "H2OXGBRegressor"]], "maxaimodel.H2O.regression.h2o_xgb_regressor.H2OXGBRegressor": [[23, 2, 1, "", "build"]], "maxaimodel.H2O.unsupervised": [[24, 0, 0, "-", "h2o_isolation_forest"], [25, 0, 0, "-", "test"]], "maxaimodel.H2O.unsupervised.h2o_isolation_forest": [[24, 1, 1, "", "H2OIsolationForestMAX"]], "maxaimodel.H2O.unsupervised.h2o_isolation_forest.H2OIsolationForestMAX": [[24, 2, 1, "", "build"], [24, 2, 1, "", "optimise_model"]], "maxaimodel.python": [[27, 0, 0, "-", "timeseries"]], "maxaimodel.python.timeseries": [[27, 0, 0, "-", "arima"], [27, 0, 0, "-", "garch"], [27, 0, 0, "-", "neuroprophet"], [27, 0, 0, "-", "prophet"]], "maxaimodel.python.timeseries.arima": [[27, 1, 1, "", "Arima"]], "maxaimodel.python.timeseries.arima.Arima": [[27, 2, 1, "", "build"], [27, 2, 1, "", "fit"], [27, 2, 1, "", "get_model_diagnostics"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "load"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "save"], [27, 3, 1, "", "training_framework"]], "maxaimodel.python.timeseries.garch": [[27, 1, 1, "", "Garch"]], "maxaimodel.python.timeseries.garch.Garch": [[27, 2, 1, "", "build"], [27, 2, 1, "", "fit"], [27, 2, 1, "", "get_model_diagnostics"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "load"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "save"], [27, 3, 1, "", "training_framework"]], "maxaimodel.python.timeseries.neuroprophet": [[27, 1, 1, "", "NProphet"]], "maxaimodel.python.timeseries.neuroprophet.NProphet": [[27, 2, 1, "", "build"], [27, 2, 1, "", "fit"], [27, 2, 1, "", "get_event_df"], [27, 2, 1, "", "get_model_diagnostics"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "load"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "save"], [27, 3, 1, "", "training_framework"]], "maxaimodel.python.timeseries.prophet": [[27, 1, 1, "", "FBProphet"]], "maxaimodel.python.timeseries.prophet.FBProphet": [[27, 2, 1, "", "build"], [27, 2, 1, "", "fit"], [27, 2, 1, "", "get_holiday_df"], [27, 2, 1, "", "get_model_diagnostics"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "load"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "save"], [27, 3, 1, "", "training_framework"]], "maxaimodel.spark": [[29, 0, 0, "-", "classification"], [30, 0, 0, "-", "clustering"], [31, 0, 0, "-", "recommendation"], [32, 0, 0, "-", "regression"], [33, 0, 0, "-", "timeseries"]], "maxaimodel.spark.timeseries": [[33, 0, 0, "-", "spark_ts"], [33, 0, 0, "-", "xgb_ts"]], "maxaimodel.spark.timeseries.spark_ts": [[33, 1, 1, "", "SparkTSForecaster"]], "maxaimodel.spark.timeseries.spark_ts.SparkTSForecaster": [[33, 2, 1, "", "build"], [33, 2, 1, "", "fit"], [33, 2, 1, "", "get_model_diagnostics"], [33, 2, 1, "", "get_params"], [33, 2, 1, "", "load"], [33, 2, 1, "", "predict"], [33, 2, 1, "", "save"]], "maxaimodel.spark.timeseries.xgb_ts": [[33, 1, 1, "", "DataPrep"], [33, 1, 1, "", "XGBForecaster"]], "maxaimodel.spark.timeseries.xgb_ts.DataPrep": [[33, 2, 1, "", "increment_datetime"], [33, 2, 1, "", "infer_frequency"], [33, 2, 1, "", "prepare_data"]], "maxaimodel.spark.timeseries.xgb_ts.XGBForecaster": [[33, 2, 1, "", "build"], [33, 2, 1, "", "fit"], [33, 2, 1, "", "get_model_diagnostics"], [33, 2, 1, "", "get_params"], [33, 2, 1, "", "load"], [33, 2, 1, "", "predict"], [33, 2, 1, "", "save"]], "maxairesources": [[35, 0, 0, "-", "cleaning"], [36, 0, 0, "-", "customer360"], [37, 0, 0, "-", "datachecks"], [39, 0, 0, "-", "ensemble"], [40, 0, 0, "-", "eval"], [41, 0, 0, "-", "exception"], [42, 0, 0, "-", "factory"], [43, 0, 0, "-", "logging"], [44, 0, 0, "-", "model_approval"], [45, 0, 0, "-", "optimizer"], [46, 0, 0, "-", "pipeline"], [47, 0, 0, "-", "utilities"]], "maxairesources.cleaning": [[35, 0, 0, "-", "NoiseRemoval"]], "maxairesources.cleaning.NoiseRemoval": [[35, 1, 1, "", "NoiseRemoval"]], "maxairesources.cleaning.NoiseRemoval.NoiseRemoval": [[35, 2, 1, "", "convert_timeformat"], [35, 2, 1, "", "determine_outlier_thersholds_std"], [35, 2, 1, "", "determine_outlier_thresholds_iqr"], [35, 2, 1, "", "drop_duplicates"], [35, 2, 1, "", "impute_null"], [35, 2, 1, "", "outlier_detect"], [35, 2, 1, "", "read_config"], [35, 2, 1, "", "remove_outlier"]], "maxairesources.customer360": [[36, 0, 0, "-", "utility"]], "maxairesources.customer360.utility": [[36, 4, 1, "", "column_rename"], [36, 4, 1, "", "create_features"], [36, 4, 1, "", "parse_arguments"], [36, 4, 1, "", "prepare_agg_arguments"], [36, 4, 1, "", "toDateType"]], "maxairesources.datachecks": [[37, 0, 0, "-", "analysis_base"], [37, 0, 0, "-", "dataframe_analysis_spark"], [38, 0, 0, "-", "test"]], "maxairesources.datachecks.analysis_base": [[37, 1, 1, "", "AnalysisBase"]], "maxairesources.datachecks.analysis_base.AnalysisBase": [[37, 2, 1, "", "compare_reports"], [37, 2, 1, "", "generate_data_health_report"], [37, 2, 1, "", "get_column_types"], [37, 2, 1, "", "save_analysis_report"], [37, 2, 1, "", "validate_report"]], "maxairesources.datachecks.dataframe_analysis_spark": [[37, 1, 1, "", "SparkDataFrameAnalyser"]], "maxairesources.datachecks.dataframe_analysis_spark.SparkDataFrameAnalyser": [[37, 2, 1, "", "compare_reports"], [37, 3, 1, "", "default_behaviours"], [37, 3, 1, "", "default_thresholds"], [37, 2, 1, "", "generate_data_health_report"], [37, 2, 1, "", "validate_report"]], "maxairesources.datachecks.test": [[38, 0, 0, "-", "test_dataframe_analysis_spark"]], "maxairesources.datachecks.test.test_dataframe_analysis_spark": [[38, 4, 1, "", "test_binary_classification_report_spark"]], "maxairesources.ensemble": [[39, 0, 0, "-", "ensemble"]], "maxairesources.ensemble.ensemble": [[39, 1, 1, "", "Ensemble"]], "maxairesources.ensemble.ensemble.Ensemble": [[39, 2, 1, "", "VotingClassifier"], [39, 2, 1, "", "VotingRegressor"], [39, 2, 1, "", "predict"]], "maxairesources.eval": [[40, 0, 0, "-", "classifier_evaluator_spark"], [40, 0, 0, "-", "regressor_evaluator_spark"]], "maxairesources.eval.classifier_evaluator_spark": [[40, 1, 1, "", "ClassifierEvaluator"]], "maxairesources.eval.classifier_evaluator_spark.ClassifierEvaluator": [[40, 2, 1, "", "get_evaluation_report"]], "maxairesources.eval.regressor_evaluator_spark": [[40, 1, 1, "", "RegressorEvaluator"]], "maxairesources.eval.regressor_evaluator_spark.RegressorEvaluator": [[40, 2, 1, "", "general_regression_report_spark"], [40, 2, 1, "", "get_evaluation_report"]], "maxairesources.exception": [[41, 0, 0, "-", "exceptions"]], "maxairesources.exception.exceptions": [[41, 5, 1, "", "DataSourceNotDefinedError"], [41, 5, 1, "", "FeatureTransformException"], [41, 5, 1, "", "MaxAIException"], [41, 5, 1, "", "MissingEnvironmentVariable"], [41, 5, 1, "", "ModelLoadException"], [41, 5, 1, "", "ModelNotImplemented"], [41, 5, 1, "", "ModelSaveException"], [41, 5, 1, "", "ModelTrainException"], [41, 5, 1, "", "ModelTypeNotDefinedException"], [41, 5, 1, "", "PortInformationNotFoundError"], [41, 5, 1, "", "UnknownOperationMode"]], "maxairesources.exception.exceptions.MaxAIException": [[41, 2, 1, "", "getErrorMessage"]], "maxairesources.factory": [[42, 4, 1, "", "import_submodules"], [42, 0, 0, "-", "model_factory"]], "maxairesources.factory.model_factory": [[42, 1, 1, "", "ModelFactory"]], "maxairesources.factory.model_factory.ModelFactory": [[42, 2, 1, "", "get_model"], [42, 2, 1, "", "register_model"]], "maxairesources.logging": [[43, 0, 0, "-", "logger"]], "maxairesources.logging.logger": [[43, 1, 1, "", "CustomAdapter"], [43, 4, 1, "", "get_file_handler"], [43, 4, 1, "", "get_logger"], [43, 4, 1, "", "get_stream_handler"]], "maxairesources.logging.logger.CustomAdapter": [[43, 2, 1, "", "process"]], "maxairesources.model_approval": [[44, 0, 0, "-", "model_approver_spark"]], "maxairesources.model_approval.model_approver_spark": [[44, 1, 1, "", "ModelApprover"]], "maxairesources.model_approval.model_approver_spark.ModelApprover": [[44, 2, 1, "", "is_above_threshold"]], "maxairesources.pipeline": [[46, 0, 0, "-", "pipeline_factory"]], "maxairesources.pipeline.pipeline_factory": [[46, 1, 1, "", "SparkTransformerFactory"]], "maxairesources.pipeline.pipeline_factory.SparkTransformerFactory": [[46, 2, 1, "", "get_transformer"], [46, 2, 1, "", "register_transformer"]], "maxairesources.utilities": [[47, 0, 0, "-", "common_utils"], [47, 0, 0, "-", "encryption"], [47, 0, 0, "-", "misc"], [47, 0, 0, "-", "multi_train"], [47, 0, 0, "-", "preprocessing"], [47, 0, 0, "-", "spark_distributor"], [48, 0, 0, "-", "tests"], [47, 0, 0, "-", "train_test_split"]], "maxairesources.utilities.common_utils": [[47, 4, 1, "", "write_file_to_s3"]], "maxairesources.utilities.encryption": [[47, 1, 1, "", "Encryption"]], "maxairesources.utilities.encryption.Encryption": [[47, 2, 1, "", "decrypt"], [47, 2, 1, "", "decrypt_columns"], [47, 2, 1, "", "encrypt"], [47, 2, 1, "", "encrypt_columns"]], "maxairesources.utilities.misc": [[47, 4, 1, "", "get_run_id_timestamp"], [47, 4, 1, "", "overwrite_dict"]], "maxairesources.utilities.multi_train": [[47, 1, 1, "", "MultiTrain"]], "maxairesources.utilities.multi_train.MultiTrain": [[47, 2, 1, "", "predict"], [47, 2, 1, "", "train_models"], [47, 6, 1, "", "trained_models"]], "maxairesources.utilities.preprocessing": [[47, 1, 1, "", "Preprocessing"]], "maxairesources.utilities.preprocessing.Preprocessing": [[47, 2, 1, "", "aggregate_transactional_data"]], "maxairesources.utilities.spark_distributor": [[47, 1, 1, "", "SparkDistributor"]], "maxairesources.utilities.spark_distributor.SparkDistributor": [[47, 2, 1, "", "pandas_to_spark_wrapper"]], "maxairesources.utilities.train_test_split": [[47, 1, 1, "", "TrainTestSplit"]], "maxairesources.utilities.train_test_split.TrainTestSplit": [[47, 2, 1, "", "random_split"], [47, 2, 1, "", "stratified_split"], [47, 2, 1, "", "time_series_split"], [47, 2, 1, "", "train_test_split"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"]}, "titleterms": {"exampl": [0, 7], "welcom": [1, 8], "max": [1, 5, 8, 49], "ai": [1, 5, 8, 49], "": [1, 8], "document": [1, 8], "indic": [1, 8], "tabl": [1, 8], "maxaidatahandl": [2, 9], "packag": [2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "submodul": [2, 3, 4, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "data_evalu": [2, 9], "modul": [2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "datafactori": [2, 9], "dataset": [2, 9], "content": [2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "maxaifeatur": [3, 4, 10, 11, 12, 13, 14, 15], "aggreg": [3, 11], "featuretool": [4, 12], "d": [5, 49], "core": [5, 49], "quickstart": [6, 50], "subpackag": [10, 17, 18, 19, 21, 24, 26, 28, 34, 37, 47], "select": 13, "model_based_selector": 13, "selector": 13, "timeseri": [14, 27, 33], "univari": 14, "transform": 15, "window": 15, "maxaimetadata": 16, "maxflow": 16, "test_maxflow": 16, "maxaimodel": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "h2o": [18, 19, 20, 21, 22, 23, 24, 25], "classif": [19, 20, 29], "h2o_dl": 19, "h2o_drf": 19, "h2o_gam": 19, "h2o_gbm": 19, "h2o_glm": 19, "h2o_rf": 19, "h2o_xgb": 19, "test": [20, 22, 25, 38, 48], "test_classif": 20, "cluster": [21, 22, 30], "h2o_kmean": 21, "test_clust": 22, "regress": [23, 32], "h2o_dl_regressor": 23, "h2o_drf_regressor": 23, "h2o_gam_regressor": 23, "h2o_gbm_regressor": 23, "h2o_glm_regressor": 23, "h2o_rulefit_regressor": 23, "h2o_xgb_regressor": 23, "unsupervis": [24, 25], "h2o_isolation_forest": 24, "h2o_pca": 24, "test_unsupervis": 25, "python": [26, 27], "arima": 27, "garch": 27, "neuroprophet": 27, "prophet": 27, "spark": [28, 29, 30, 31, 32, 33], "spark_dt": 29, "spark_fmc": 29, "spark_gbt": 29, "spark_lr": 29, "spark_mlp": 29, "spark_nb": 29, "spark_ovr": 29, "spark_rf": 29, "spark_svc": 29, "spark_hvt": 30, "spark_kmean": 30, "recommend": 31, "spark_al": 31, "spark_aft_survival_regress": 32, "spark_dt_regress": 32, "spark_fm_regress": 32, "spark_gbt_regress": 32, "spark_gl_regress": 32, "spark_isotonic_regress": 32, "spark_linear_regress": 32, "spark_rf_regress": 32, "spark_t": 33, "xgb_t": 33, "maxairesourc": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "conftest": [34, 38], "clean": 35, "noiseremov": 35, "customer360": 36, "util": [36, 47, 48], "datacheck": [37, 38], "analysis_bas": 37, "dataframe_analysis_spark": 37, "test_dataframe_analysis_spark": 38, "ensembl": 39, "eval": 40, "classifier_evaluator_spark": 40, "model_evalu": 40, "regressor_evaluator_spark": 40, "except": 41, "factori": 42, "model_factori": 42, "log": 43, "logger": 43, "model_approv": 44, "model_approver_spark": 44, "optim": 45, "param_optim": 45, "pipelin": 46, "pipeline_factori": 46, "spark_pipelin": 46, "common_util": 47, "data_connector": 47, "encrypt": 47, "misc": 47, "multi_train": 47, "preprocess": 47, "spark_distributor": 47, "train_test_split": 47, "test_data_connector": 48, "test_multi_train": 48, "test_spark_distributor": 48, "test_train_test_split": 48}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Examples": [[0, "examples"], [7, "examples"]], "Welcome to Max.AI\u2019s documentation!": [[1, "welcome-to-max-ai-s-documentation"], [8, "welcome-to-max-ai-s-documentation"]], "Indices and tables": [[1, "indices-and-tables"], [8, "indices-and-tables"]], "maxaidatahandling package": [[2, "maxaidatahandling-package"], [9, "maxaidatahandling-package"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [27, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [32, "submodules"], [33, "submodules"], [34, "submodules"], [35, "submodules"], [36, "submodules"], [37, "submodules"], [38, "submodules"], [39, "submodules"], [40, "submodules"], [41, "submodules"], [42, "submodules"], [43, "submodules"], [44, "submodules"], [45, "submodules"], [46, "submodules"], [47, "submodules"], [48, "submodules"]], "maxaidatahandling.data_evaluator module": [[2, "maxaidatahandling-data-evaluator-module"], [9, "maxaidatahandling-data-evaluator-module"]], "maxaidatahandling.datafactory module": [[2, "maxaidatahandling-datafactory-module"], [9, "maxaidatahandling-datafactory-module"]], "maxaidatahandling.dataset module": [[2, "maxaidatahandling-dataset-module"], [9, "maxaidatahandling-dataset-module"]], "Module contents": [[2, "module-maxaidatahandling"], [3, "module-maxaifeaturization.aggregation"], [4, "module-maxaifeaturization.featuretools"], [9, "module-maxaidatahandling"], [10, "module-maxaifeaturization"], [11, "module-maxaifeaturization.aggregation"], [12, "module-maxaifeaturization.featuretools"], [13, "module-maxaifeaturization.selection"], [14, "module-maxaifeaturization.timeseries"], [15, "module-maxaifeaturization.transformation"], [16, "module-maxaimetadata"], [17, "module-maxaimodel"], [18, "module-maxaimodel.H2O"], [19, "module-maxaimodel.H2O.classification"], [20, "module-maxaimodel.H2O.classification.test"], [21, "module-maxaimodel.H2O.clustering"], [22, "module-maxaimodel.H2O.clustering.test"], [23, "module-maxaimodel.H2O.regression"], [24, "module-maxaimodel.H2O.unsupervised"], [25, "module-maxaimodel.H2O.unsupervised.test"], [26, "module-maxaimodel.python"], [27, "module-maxaimodel.python.timeseries"], [28, "module-maxaimodel.spark"], [29, "module-maxaimodel.spark.classification"], [30, "module-maxaimodel.spark.clustering"], [31, "module-maxaimodel.spark.recommendation"], [32, "module-maxaimodel.spark.regression"], [33, "module-maxaimodel.spark.timeseries"], [34, "module-maxairesources"], [35, "module-maxairesources.cleaning"], [36, "module-maxairesources.customer360"], [37, "module-maxairesources.datachecks"], [38, "module-maxairesources.datachecks.test"], [39, "module-maxairesources.ensemble"], [40, "module-maxairesources.eval"], [41, "module-maxairesources.exception"], [42, "module-maxairesources.factory"], [43, "module-maxairesources.logging"], [44, "module-maxairesources.model_approval"], [45, "module-maxairesources.optimizer"], [46, "module-maxairesources.pipeline"], [47, "module-maxairesources.utilities"], [48, "module-maxairesources.utilities.tests"]], "maxaifeaturization.aggregation package": [[3, "maxaifeaturization-aggregation-package"], [11, "maxaifeaturization-aggregation-package"]], "maxaifeaturization.aggregation.aggregation module": [[3, "module-maxaifeaturization.aggregation.aggregation"], [11, "module-maxaifeaturization.aggregation.aggregation"]], "maxaifeaturization.featuretools package": [[4, "maxaifeaturization-featuretools-package"], [12, "maxaifeaturization-featuretools-package"]], "maxaifeaturization.featuretools.featuretools module": [[4, "maxaifeaturization-featuretools-featuretools-module"], [12, "maxaifeaturization-featuretools-featuretools-module"]], "max.ai.ds.core": [[5, "max-ai-ds-core"], [49, "max-ai-ds-core"]], "Quickstart": [[6, "quickstart"], [50, "quickstart"]], "maxaifeaturization package": [[10, "maxaifeaturization-package"]], "Subpackages": [[10, "subpackages"], [17, "subpackages"], [18, "subpackages"], [19, "subpackages"], [21, "subpackages"], [24, "subpackages"], [26, "subpackages"], [28, "subpackages"], [34, "subpackages"], [37, "subpackages"], [47, "subpackages"]], "maxaifeaturization.selection package": [[13, "maxaifeaturization-selection-package"]], "maxaifeaturization.selection.model_based_selector module": [[13, "maxaifeaturization-selection-model-based-selector-module"]], "maxaifeaturization.selection.selector module": [[13, "maxaifeaturization-selection-selector-module"]], "maxaifeaturization.timeseries package": [[14, "maxaifeaturization-timeseries-package"]], "maxaifeaturization.timeseries.univariate module": [[14, "module-maxaifeaturization.timeseries.univariate"]], "maxaifeaturization.transformation package": [[15, "maxaifeaturization-transformation-package"]], "maxaifeaturization.transformation.transform module": [[15, "module-maxaifeaturization.transformation.transform"]], "maxaifeaturization.transformation.window module": [[15, "maxaifeaturization-transformation-window-module"]], "maxaimetadata package": [[16, "maxaimetadata-package"]], "maxaimetadata.maxflow module": [[16, "module-maxaimetadata.maxflow"]], "maxaimetadata.test_maxflow module": [[16, "maxaimetadata-test-maxflow-module"]], "maxaimodel package": [[17, "maxaimodel-package"]], "maxaimodel.H2O package": [[18, "maxaimodel-h2o-package"]], "maxaimodel.H2O.classification package": [[19, "maxaimodel-h2o-classification-package"]], "maxaimodel.H2O.classification.h2o_dl module": [[19, "module-maxaimodel.H2O.classification.h2o_dl"]], "maxaimodel.H2O.classification.h2o_drf module": [[19, "module-maxaimodel.H2O.classification.h2o_drf"]], "maxaimodel.H2O.classification.h2o_gam module": [[19, "module-maxaimodel.H2O.classification.h2o_gam"]], "maxaimodel.H2O.classification.h2o_gbm module": [[19, "module-maxaimodel.H2O.classification.h2o_gbm"]], "maxaimodel.H2O.classification.h2o_glm module": [[19, "module-maxaimodel.H2O.classification.h2o_glm"]], "maxaimodel.H2O.classification.h2o_rf module": [[19, "maxaimodel-h2o-classification-h2o-rf-module"]], "maxaimodel.H2O.classification.h2o_xgb module": [[19, "module-maxaimodel.H2O.classification.h2o_xgb"]], "maxaimodel.H2O.classification.test package": [[20, "maxaimodel-h2o-classification-test-package"]], "maxaimodel.H2O.classification.test.test_classification module": [[20, "maxaimodel-h2o-classification-test-test-classification-module"]], "maxaimodel.H2O.clustering package": [[21, "maxaimodel-h2o-clustering-package"]], "maxaimodel.H2O.clustering.h2o_kmeans module": [[21, "module-maxaimodel.H2O.clustering.h2o_kmeans"]], "maxaimodel.H2O.clustering.test package": [[22, "maxaimodel-h2o-clustering-test-package"]], "maxaimodel.H2O.clustering.test.test_clustering module": [[22, "maxaimodel-h2o-clustering-test-test-clustering-module"]], "maxaimodel.H2O.regression package": [[23, "maxaimodel-h2o-regression-package"]], "maxaimodel.H2O.regression.h2o_dl_regressor module": [[23, "module-maxaimodel.H2O.regression.h2o_dl_regressor"]], "maxaimodel.H2O.regression.h2o_drf_regressor module": [[23, "module-maxaimodel.H2O.regression.h2o_drf_regressor"]], "maxaimodel.H2O.regression.h2o_gam_regressor module": [[23, "module-maxaimodel.H2O.regression.h2o_gam_regressor"]], "maxaimodel.H2O.regression.h2o_gbm_regressor module": [[23, "module-maxaimodel.H2O.regression.h2o_gbm_regressor"]], "maxaimodel.H2O.regression.h2o_glm_regressor module": [[23, "module-maxaimodel.H2O.regression.h2o_glm_regressor"]], "maxaimodel.H2O.regression.h2o_rulefit_regressor module": [[23, "maxaimodel-h2o-regression-h2o-rulefit-regressor-module"]], "maxaimodel.H2O.regression.h2o_xgb_regressor module": [[23, "module-maxaimodel.H2O.regression.h2o_xgb_regressor"]], "maxaimodel.H2O.unsupervised package": [[24, "maxaimodel-h2o-unsupervised-package"]], "maxaimodel.H2O.unsupervised.h2o_isolation_forest module": [[24, "module-maxaimodel.H2O.unsupervised.h2o_isolation_forest"]], "maxaimodel.H2O.unsupervised.h2o_pca module": [[24, "maxaimodel-h2o-unsupervised-h2o-pca-module"]], "maxaimodel.H2O.unsupervised.test package": [[25, "maxaimodel-h2o-unsupervised-test-package"]], "maxaimodel.H2O.unsupervised.test.test_unsupervised module": [[25, "maxaimodel-h2o-unsupervised-test-test-unsupervised-module"]], "maxaimodel.python package": [[26, "maxaimodel-python-package"]], "maxaimodel.python.timeseries package": [[27, "maxaimodel-python-timeseries-package"]], "maxaimodel.python.timeseries.arima module": [[27, "module-maxaimodel.python.timeseries.arima"]], "maxaimodel.python.timeseries.garch module": [[27, "module-maxaimodel.python.timeseries.garch"]], "maxaimodel.python.timeseries.neuroprophet module": [[27, "module-maxaimodel.python.timeseries.neuroprophet"]], "maxaimodel.python.timeseries.prophet module": [[27, "module-maxaimodel.python.timeseries.prophet"]], "maxaimodel.spark package": [[28, "maxaimodel-spark-package"]], "maxaimodel.spark.classification package": [[29, "maxaimodel-spark-classification-package"]], "maxaimodel.spark.classification.spark_dt module": [[29, "maxaimodel-spark-classification-spark-dt-module"]], "maxaimodel.spark.classification.spark_fmc module": [[29, "maxaimodel-spark-classification-spark-fmc-module"]], "maxaimodel.spark.classification.spark_gbt module": [[29, "maxaimodel-spark-classification-spark-gbt-module"]], "maxaimodel.spark.classification.spark_lr module": [[29, "maxaimodel-spark-classification-spark-lr-module"]], "maxaimodel.spark.classification.spark_mlp module": [[29, "maxaimodel-spark-classification-spark-mlp-module"]], "maxaimodel.spark.classification.spark_nb module": [[29, "maxaimodel-spark-classification-spark-nb-module"]], "maxaimodel.spark.classification.spark_ovr module": [[29, "maxaimodel-spark-classification-spark-ovr-module"]], "maxaimodel.spark.classification.spark_rf module": [[29, "maxaimodel-spark-classification-spark-rf-module"]], "maxaimodel.spark.classification.spark_svc module": [[29, "maxaimodel-spark-classification-spark-svc-module"]], "maxaimodel.spark.clustering package": [[30, "maxaimodel-spark-clustering-package"]], "maxaimodel.spark.clustering.spark_hvt module": [[30, "maxaimodel-spark-clustering-spark-hvt-module"]], "maxaimodel.spark.clustering.spark_kmeans module": [[30, "maxaimodel-spark-clustering-spark-kmeans-module"]], "maxaimodel.spark.recommendation package": [[31, "maxaimodel-spark-recommendation-package"]], "maxaimodel.spark.recommendation.spark_als module": [[31, "maxaimodel-spark-recommendation-spark-als-module"]], "maxaimodel.spark.regression package": [[32, "maxaimodel-spark-regression-package"]], "maxaimodel.spark.regression.spark_aft_survival_regression module": [[32, "maxaimodel-spark-regression-spark-aft-survival-regression-module"]], "maxaimodel.spark.regression.spark_dt_regression module": [[32, "maxaimodel-spark-regression-spark-dt-regression-module"]], "maxaimodel.spark.regression.spark_fm_regression module": [[32, "maxaimodel-spark-regression-spark-fm-regression-module"]], "maxaimodel.spark.regression.spark_gbt_regression module": [[32, "maxaimodel-spark-regression-spark-gbt-regression-module"]], "maxaimodel.spark.regression.spark_gl_regression module": [[32, "maxaimodel-spark-regression-spark-gl-regression-module"]], "maxaimodel.spark.regression.spark_isotonic_regression module": [[32, "maxaimodel-spark-regression-spark-isotonic-regression-module"]], "maxaimodel.spark.regression.spark_linear_regression module": [[32, "maxaimodel-spark-regression-spark-linear-regression-module"]], "maxaimodel.spark.regression.spark_rf_regression module": [[32, "maxaimodel-spark-regression-spark-rf-regression-module"]], "maxaimodel.spark.timeseries package": [[33, "maxaimodel-spark-timeseries-package"]], "maxaimodel.spark.timeseries.spark_ts module": [[33, "module-maxaimodel.spark.timeseries.spark_ts"]], "maxaimodel.spark.timeseries.xgb_ts module": [[33, "module-maxaimodel.spark.timeseries.xgb_ts"]], "maxairesources package": [[34, "maxairesources-package"]], "maxairesources.conftest module": [[34, "maxairesources-conftest-module"]], "maxairesources.cleaning package": [[35, "maxairesources-cleaning-package"]], "maxairesources.cleaning.NoiseRemoval module": [[35, "module-maxairesources.cleaning.NoiseRemoval"]], "maxairesources.customer360 package": [[36, "maxairesources-customer360-package"]], "maxairesources.customer360.utility module": [[36, "module-maxairesources.customer360.utility"]], "maxairesources.datachecks package": [[37, "maxairesources-datachecks-package"]], "maxairesources.datachecks.analysis_base module": [[37, "module-maxairesources.datachecks.analysis_base"]], "maxairesources.datachecks.dataframe_analysis_spark module": [[37, "module-maxairesources.datachecks.dataframe_analysis_spark"]], "maxairesources.datachecks.test package": [[38, "maxairesources-datachecks-test-package"]], "maxairesources.datachecks.test.conftest module": [[38, "maxairesources-datachecks-test-conftest-module"]], "maxairesources.datachecks.test.test_dataframe_analysis_spark module": [[38, "module-maxairesources.datachecks.test.test_dataframe_analysis_spark"]], "maxairesources.ensemble package": [[39, "maxairesources-ensemble-package"]], "maxairesources.ensemble.ensemble module": [[39, "module-maxairesources.ensemble.ensemble"]], "maxairesources.eval package": [[40, "maxairesources-eval-package"]], "maxairesources.eval.classifier_evaluator_spark module": [[40, "module-maxairesources.eval.classifier_evaluator_spark"]], "maxairesources.eval.model_evaluator module": [[40, "maxairesources-eval-model-evaluator-module"]], "maxairesources.eval.regressor_evaluator_spark module": [[40, "module-maxairesources.eval.regressor_evaluator_spark"]], "maxairesources.exception package": [[41, "maxairesources-exception-package"]], "maxairesources.exception.exceptions module": [[41, "module-maxairesources.exception.exceptions"]], "maxairesources.factory package": [[42, "maxairesources-factory-package"]], "maxairesources.factory.model_factory module": [[42, "module-maxairesources.factory.model_factory"]], "maxairesources.logging package": [[43, "maxairesources-logging-package"]], "maxairesources.logging.logger module": [[43, "module-maxairesources.logging.logger"]], "maxairesources.model_approval package": [[44, "maxairesources-model-approval-package"]], "maxairesources.model_approval.model_approver_spark module": [[44, "module-maxairesources.model_approval.model_approver_spark"]], "maxairesources.optimizer package": [[45, "maxairesources-optimizer-package"]], "maxairesources.optimizer.param_optimizer module": [[45, "maxairesources-optimizer-param-optimizer-module"]], "maxairesources.pipeline package": [[46, "maxairesources-pipeline-package"]], "maxairesources.pipeline.pipeline_factory module": [[46, "module-maxairesources.pipeline.pipeline_factory"]], "maxairesources.pipeline.spark_pipeline module": [[46, "maxairesources-pipeline-spark-pipeline-module"]], "maxairesources.utilities package": [[47, "maxairesources-utilities-package"]], "maxairesources.utilities.common_utils module": [[47, "module-maxairesources.utilities.common_utils"]], "maxairesources.utilities.data_connectors module": [[47, "maxairesources-utilities-data-connectors-module"]], "maxairesources.utilities.encryption module": [[47, "module-maxairesources.utilities.encryption"]], "maxairesources.utilities.misc module": [[47, "module-maxairesources.utilities.misc"]], "maxairesources.utilities.multi_train module": [[47, "module-maxairesources.utilities.multi_train"]], "maxairesources.utilities.preprocessing module": [[47, "module-maxairesources.utilities.preprocessing"]], "maxairesources.utilities.spark_distributor module": [[47, "module-maxairesources.utilities.spark_distributor"]], "maxairesources.utilities.train_test_split module": [[47, "module-maxairesources.utilities.train_test_split"]], "maxairesources.utilities.tests package": [[48, "maxairesources-utilities-tests-package"]], "maxairesources.utilities.tests.test_data_connector module": [[48, "maxairesources-utilities-tests-test-data-connector-module"]], "maxairesources.utilities.tests.test_multi_train module": [[48, "maxairesources-utilities-tests-test-multi-train-module"]], "maxairesources.utilities.tests.test_spark_distributor module": [[48, "maxairesources-utilities-tests-test-spark-distributor-module"]], "maxairesources.utilities.tests.test_train_test_split module": [[48, "maxairesources-utilities-tests-test-train-test-split-module"]]}, "indexentries": {"maxaidatahandling": [[2, "module-maxaidatahandling"], [9, "module-maxaidatahandling"]], "module": [[2, "module-maxaidatahandling"], [3, "module-maxaifeaturization.aggregation"], [3, "module-maxaifeaturization.aggregation.aggregation"], [4, "module-maxaifeaturization.featuretools"], [9, "module-maxaidatahandling"], [10, "module-maxaifeaturization"], [11, "module-maxaifeaturization.aggregation"], [11, "module-maxaifeaturization.aggregation.aggregation"], [12, "module-maxaifeaturization.featuretools"], [13, "module-maxaifeaturization.selection"], [14, "module-maxaifeaturization.timeseries"], [14, "module-maxaifeaturization.timeseries.univariate"], [15, "module-maxaifeaturization.transformation"], [15, "module-maxaifeaturization.transformation.transform"], [16, "module-maxaimetadata"], [16, "module-maxaimetadata.maxflow"], [17, "module-maxaimodel"], [18, "module-maxaimodel.H2O"], [19, "module-maxaimodel.H2O.classification"], [19, "module-maxaimodel.H2O.classification.h2o_dl"], [19, "module-maxaimodel.H2O.classification.h2o_drf"], [19, "module-maxaimodel.H2O.classification.h2o_gam"], [19, "module-maxaimodel.H2O.classification.h2o_gbm"], [19, "module-maxaimodel.H2O.classification.h2o_glm"], [19, "module-maxaimodel.H2O.classification.h2o_xgb"], [20, "module-maxaimodel.H2O.classification.test"], [21, "module-maxaimodel.H2O.clustering"], [21, "module-maxaimodel.H2O.clustering.h2o_kmeans"], [22, "module-maxaimodel.H2O.clustering.test"], [23, "module-maxaimodel.H2O.regression"], [23, "module-maxaimodel.H2O.regression.h2o_dl_regressor"], [23, "module-maxaimodel.H2O.regression.h2o_drf_regressor"], [23, "module-maxaimodel.H2O.regression.h2o_gam_regressor"], [23, "module-maxaimodel.H2O.regression.h2o_gbm_regressor"], [23, "module-maxaimodel.H2O.regression.h2o_glm_regressor"], [23, "module-maxaimodel.H2O.regression.h2o_xgb_regressor"], [24, "module-maxaimodel.H2O.unsupervised"], [24, "module-maxaimodel.H2O.unsupervised.h2o_isolation_forest"], [25, "module-maxaimodel.H2O.unsupervised.test"], [26, "module-maxaimodel.python"], [27, "module-maxaimodel.python.timeseries"], [27, "module-maxaimodel.python.timeseries.arima"], [27, "module-maxaimodel.python.timeseries.garch"], [27, "module-maxaimodel.python.timeseries.neuroprophet"], [27, "module-maxaimodel.python.timeseries.prophet"], [28, "module-maxaimodel.spark"], [29, "module-maxaimodel.spark.classification"], [30, "module-maxaimodel.spark.clustering"], [31, "module-maxaimodel.spark.recommendation"], [32, "module-maxaimodel.spark.regression"], [33, "module-maxaimodel.spark.timeseries"], [33, "module-maxaimodel.spark.timeseries.spark_ts"], [33, "module-maxaimodel.spark.timeseries.xgb_ts"], [34, "module-maxairesources"], [35, "module-maxairesources.cleaning"], [35, "module-maxairesources.cleaning.NoiseRemoval"], [36, "module-maxairesources.customer360"], [36, "module-maxairesources.customer360.utility"], [37, "module-maxairesources.datachecks"], [37, "module-maxairesources.datachecks.analysis_base"], [37, "module-maxairesources.datachecks.dataframe_analysis_spark"], [38, "module-maxairesources.datachecks.test"], [38, "module-maxairesources.datachecks.test.test_dataframe_analysis_spark"], [39, "module-maxairesources.ensemble"], [39, "module-maxairesources.ensemble.ensemble"], [40, "module-maxairesources.eval"], [40, "module-maxairesources.eval.classifier_evaluator_spark"], [40, "module-maxairesources.eval.regressor_evaluator_spark"], [41, "module-maxairesources.exception"], [41, "module-maxairesources.exception.exceptions"], [42, "module-maxairesources.factory"], [42, "module-maxairesources.factory.model_factory"], [43, "module-maxairesources.logging"], [43, "module-maxairesources.logging.logger"], [44, "module-maxairesources.model_approval"], [44, "module-maxairesources.model_approval.model_approver_spark"], [45, "module-maxairesources.optimizer"], [46, "module-maxairesources.pipeline"], [46, "module-maxairesources.pipeline.pipeline_factory"], [47, "module-maxairesources.utilities"], [47, "module-maxairesources.utilities.common_utils"], [47, "module-maxairesources.utilities.encryption"], [47, "module-maxairesources.utilities.misc"], [47, "module-maxairesources.utilities.multi_train"], [47, "module-maxairesources.utilities.preprocessing"], [47, "module-maxairesources.utilities.spark_distributor"], [47, "module-maxairesources.utilities.train_test_split"], [48, "module-maxairesources.utilities.tests"]], "aggregation (class in maxaifeaturization.aggregation.aggregation)": [[3, "maxaifeaturization.aggregation.aggregation.Aggregation"], [11, "maxaifeaturization.aggregation.aggregation.Aggregation"]], "constants (class in maxaifeaturization.aggregation.aggregation)": [[3, "maxaifeaturization.aggregation.aggregation.Constants"], [11, "maxaifeaturization.aggregation.aggregation.Constants"]], "execute() (maxaifeaturization.aggregation.aggregation.aggregation method)": [[3, "maxaifeaturization.aggregation.aggregation.Aggregation.execute"], [11, "maxaifeaturization.aggregation.aggregation.Aggregation.execute"]], "maxaifeaturization.aggregation": [[3, "module-maxaifeaturization.aggregation"], [11, "module-maxaifeaturization.aggregation"]], "maxaifeaturization.aggregation.aggregation": [[3, "module-maxaifeaturization.aggregation.aggregation"], [11, "module-maxaifeaturization.aggregation.aggregation"]], "operation_dict (maxaifeaturization.aggregation.aggregation.constants attribute)": [[3, "maxaifeaturization.aggregation.aggregation.Constants.operation_dict"], [11, "maxaifeaturization.aggregation.aggregation.Constants.operation_dict"]], "maxaifeaturization.featuretools": [[4, "module-maxaifeaturization.featuretools"], [12, "module-maxaifeaturization.featuretools"]], "maxaifeaturization": [[10, "module-maxaifeaturization"]], "maxaifeaturization.selection": [[13, "module-maxaifeaturization.selection"]], "decompose (class in maxaifeaturization.timeseries.univariate)": [[14, "maxaifeaturization.timeseries.univariate.Decompose"]], "stationaritytest (class in maxaifeaturization.timeseries.univariate)": [[14, "maxaifeaturization.timeseries.univariate.StationarityTest"]], "adf() (maxaifeaturization.timeseries.univariate.stationaritytest static method)": [[14, "maxaifeaturization.timeseries.univariate.StationarityTest.adf"]], "autocorrelation() (in module maxaifeaturization.timeseries.univariate)": [[14, "maxaifeaturization.timeseries.univariate.autocorrelation"]], "check_stationarity() (in module maxaifeaturization.timeseries.univariate)": [[14, "maxaifeaturization.timeseries.univariate.check_stationarity"]], "kpss() (maxaifeaturization.timeseries.univariate.stationaritytest static method)": [[14, "maxaifeaturization.timeseries.univariate.StationarityTest.kpss"]], "loess() (maxaifeaturization.timeseries.univariate.decompose static method)": [[14, "maxaifeaturization.timeseries.univariate.Decompose.loess"]], "maxaifeaturization.timeseries": [[14, "module-maxaifeaturization.timeseries"]], "maxaifeaturization.timeseries.univariate": [[14, "module-maxaifeaturization.timeseries.univariate"]], "moving_average() (maxaifeaturization.timeseries.univariate.decompose static method)": [[14, "maxaifeaturization.timeseries.univariate.Decompose.moving_average"]], "time_series_decomposition() (in module maxaifeaturization.timeseries.univariate)": [[14, "maxaifeaturization.timeseries.univariate.time_series_decomposition"]], "constants (class in maxaifeaturization.transformation.transform)": [[15, "maxaifeaturization.transformation.transform.Constants"]], "datetimetransform (class in maxaifeaturization.transformation.transform)": [[15, "maxaifeaturization.transformation.transform.DateTimeTransform"]], "filter (class in maxaifeaturization.transformation.transform)": [[15, "maxaifeaturization.transformation.transform.Filter"]], "numtransforms (class in maxaifeaturization.transformation.transform)": [[15, "maxaifeaturization.transformation.transform.NumTransforms"]], "strtransforms (class in maxaifeaturization.transformation.transform)": [[15, "maxaifeaturization.transformation.transform.StrTransforms"]], "transformation (class in maxaifeaturization.transformation.transform)": [[15, "maxaifeaturization.transformation.transform.Transformation"]], "alter_case() (maxaifeaturization.transformation.transform.strtransforms static method)": [[15, "maxaifeaturization.transformation.transform.StrTransforms.alter_case"]], "concat_columns() (maxaifeaturization.transformation.transform.strtransforms static method)": [[15, "maxaifeaturization.transformation.transform.StrTransforms.concat_columns"]], "convert_to_iso8601() (maxaifeaturization.transformation.transform.datetimetransform static method)": [[15, "maxaifeaturization.transformation.transform.DateTimeTransform.convert_to_iso8601"]], "decode_transformation() (maxaifeaturization.transformation.transform.transformation method)": [[15, "maxaifeaturization.transformation.transform.Transformation.decode_transformation"]], "execute() (maxaifeaturization.transformation.transform.filter method)": [[15, "maxaifeaturization.transformation.transform.Filter.execute"]], "execute() (maxaifeaturization.transformation.transform.transformation method)": [[15, "maxaifeaturization.transformation.transform.Transformation.execute"]], "exp() (maxaifeaturization.transformation.transform.numtransforms static method)": [[15, "maxaifeaturization.transformation.transform.NumTransforms.exp"]], "log() (maxaifeaturization.transformation.transform.numtransforms static method)": [[15, "maxaifeaturization.transformation.transform.NumTransforms.log"]], "maxaifeaturization.transformation": [[15, "module-maxaifeaturization.transformation"]], "maxaifeaturization.transformation.transform": [[15, "module-maxaifeaturization.transformation.transform"]], "one_hot_encoder() (maxaifeaturization.transformation.transform.strtransforms static method)": [[15, "maxaifeaturization.transformation.transform.StrTransforms.one_hot_encoder"]], "operation_dict (maxaifeaturization.transformation.transform.constants attribute)": [[15, "maxaifeaturization.transformation.transform.Constants.operation_dict"]], "reciprocal() (maxaifeaturization.transformation.transform.numtransforms static method)": [[15, "maxaifeaturization.transformation.transform.NumTransforms.reciprocal"]], "split_column() (maxaifeaturization.transformation.transform.strtransforms static method)": [[15, "maxaifeaturization.transformation.transform.StrTransforms.split_column"]], "string_indexer() (maxaifeaturization.transformation.transform.strtransforms static method)": [[15, "maxaifeaturization.transformation.transform.StrTransforms.string_indexer"]], "trim_whitespaces() (maxaifeaturization.transformation.transform.strtransforms static method)": [[15, "maxaifeaturization.transformation.transform.StrTransforms.trim_whitespaces"]], "unpack_kwargs() (in module maxaifeaturization.transformation.transform)": [[15, "maxaifeaturization.transformation.transform.unpack_kwargs"]], "zscore() (maxaifeaturization.transformation.transform.numtransforms static method)": [[15, "maxaifeaturization.transformation.transform.NumTransforms.zscore"]], "maxflow (class in maxaimetadata.maxflow)": [[16, "maxaimetadata.maxflow.MaxFlow"]], "maxrun (class in maxaimetadata.maxflow)": [[16, "maxaimetadata.maxflow.MaxRun"]], "auto_log() (maxaimetadata.maxflow.maxflow method)": [[16, "maxaimetadata.maxflow.MaxFlow.auto_log"]], "end_run() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.end_run"]], "get_active_flow() (maxaimetadata.maxflow.maxflow class method)": [[16, "maxaimetadata.maxflow.MaxFlow.get_active_flow"]], "get_active_run() (maxaimetadata.maxflow.maxflow class method)": [[16, "maxaimetadata.maxflow.MaxFlow.get_active_run"]], "get_registered_model() (maxaimetadata.maxflow.maxflow method)": [[16, "maxaimetadata.maxflow.MaxFlow.get_registered_model"]], "log_artifact() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_artifact"]], "log_artifacts() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_artifacts"]], "log_data() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_data"]], "log_dict() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_dict"]], "log_figure() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_figure"]], "log_metric() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_metric"]], "log_metrics() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_metrics"]], "log_model() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_model"]], "log_param() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_param"]], "log_params() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.log_params"]], "maxaimetadata": [[16, "module-maxaimetadata"]], "maxaimetadata.maxflow": [[16, "module-maxaimetadata.maxflow"]], "register_model() (maxaimetadata.maxflow.maxflow method)": [[16, "maxaimetadata.maxflow.MaxFlow.register_model"]], "set_active() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.set_active"]], "set_experiment() (maxaimetadata.maxflow.maxflow method)": [[16, "maxaimetadata.maxflow.MaxFlow.set_experiment"]], "set_tag() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.set_tag"]], "set_tags() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.set_tags"]], "start_child_run() (maxaimetadata.maxflow.maxrun method)": [[16, "maxaimetadata.maxflow.MaxRun.start_child_run"]], "start_run() (maxaimetadata.maxflow.maxflow method)": [[16, "maxaimetadata.maxflow.MaxFlow.start_run"]], "stop() (maxaimetadata.maxflow.maxflow method)": [[16, "maxaimetadata.maxflow.MaxFlow.stop"]], "maxaimodel": [[17, "module-maxaimodel"]], "maxaimodel.h2o": [[18, "module-maxaimodel.H2O"]], "h2odlclassifier (class in maxaimodel.h2o.classification.h2o_dl)": [[19, "maxaimodel.H2O.classification.h2o_dl.H2ODLClassifier"]], "h2odrfclassifier (class in maxaimodel.h2o.classification.h2o_drf)": [[19, "maxaimodel.H2O.classification.h2o_drf.H2ODRFClassifier"]], "h2ogamclassifier (class in maxaimodel.h2o.classification.h2o_gam)": [[19, "maxaimodel.H2O.classification.h2o_gam.H2OGAMClassifier"]], "h2ogbmclassifier (class in maxaimodel.h2o.classification.h2o_gbm)": [[19, "maxaimodel.H2O.classification.h2o_gbm.H2OGBMClassifier"]], "h2oglmclassifier (class in maxaimodel.h2o.classification.h2o_glm)": [[19, "maxaimodel.H2O.classification.h2o_glm.H2OGLMClassifier"]], "h2oxgbclassifier (class in maxaimodel.h2o.classification.h2o_xgb)": [[19, "maxaimodel.H2O.classification.h2o_xgb.H2OXGBClassifier"]], "build() (maxaimodel.h2o.classification.h2o_dl.h2odlclassifier method)": [[19, "maxaimodel.H2O.classification.h2o_dl.H2ODLClassifier.build"]], "build() (maxaimodel.h2o.classification.h2o_drf.h2odrfclassifier method)": [[19, "maxaimodel.H2O.classification.h2o_drf.H2ODRFClassifier.build"]], "build() (maxaimodel.h2o.classification.h2o_gam.h2ogamclassifier method)": [[19, "maxaimodel.H2O.classification.h2o_gam.H2OGAMClassifier.build"]], "build() (maxaimodel.h2o.classification.h2o_gbm.h2ogbmclassifier method)": [[19, "maxaimodel.H2O.classification.h2o_gbm.H2OGBMClassifier.build"]], "build() (maxaimodel.h2o.classification.h2o_glm.h2oglmclassifier method)": [[19, "maxaimodel.H2O.classification.h2o_glm.H2OGLMClassifier.build"]], "build() (maxaimodel.h2o.classification.h2o_xgb.h2oxgbclassifier method)": [[19, "maxaimodel.H2O.classification.h2o_xgb.H2OXGBClassifier.build"]], "maxaimodel.h2o.classification": [[19, "module-maxaimodel.H2O.classification"]], "maxaimodel.h2o.classification.h2o_dl": [[19, "module-maxaimodel.H2O.classification.h2o_dl"]], "maxaimodel.h2o.classification.h2o_drf": [[19, "module-maxaimodel.H2O.classification.h2o_drf"]], "maxaimodel.h2o.classification.h2o_gam": [[19, "module-maxaimodel.H2O.classification.h2o_gam"]], "maxaimodel.h2o.classification.h2o_gbm": [[19, "module-maxaimodel.H2O.classification.h2o_gbm"]], "maxaimodel.h2o.classification.h2o_glm": [[19, "module-maxaimodel.H2O.classification.h2o_glm"]], "maxaimodel.h2o.classification.h2o_xgb": [[19, "module-maxaimodel.H2O.classification.h2o_xgb"]], "maxaimodel.h2o.classification.test": [[20, "module-maxaimodel.H2O.classification.test"]], "h2okmeansclustering (class in maxaimodel.h2o.clustering.h2o_kmeans)": [[21, "maxaimodel.H2O.clustering.h2o_kmeans.H2OKmeansClustering"]], "build() (maxaimodel.h2o.clustering.h2o_kmeans.h2okmeansclustering method)": [[21, "maxaimodel.H2O.clustering.h2o_kmeans.H2OKmeansClustering.build"]], "maxaimodel.h2o.clustering": [[21, "module-maxaimodel.H2O.clustering"]], "maxaimodel.h2o.clustering.h2o_kmeans": [[21, "module-maxaimodel.H2O.clustering.h2o_kmeans"]], "maxaimodel.h2o.clustering.test": [[22, "module-maxaimodel.H2O.clustering.test"]], "h2odlregressor (class in maxaimodel.h2o.regression.h2o_dl_regressor)": [[23, "maxaimodel.H2O.regression.h2o_dl_regressor.H2ODLRegressor"]], "h2odrfregressor (class in maxaimodel.h2o.regression.h2o_drf_regressor)": [[23, "maxaimodel.H2O.regression.h2o_drf_regressor.H2ODRFRegressor"]], "h2ogamregressor (class in maxaimodel.h2o.regression.h2o_gam_regressor)": [[23, "maxaimodel.H2O.regression.h2o_gam_regressor.H2OGAMRegressor"]], "h2ogbmregressor (class in maxaimodel.h2o.regression.h2o_gbm_regressor)": [[23, "maxaimodel.H2O.regression.h2o_gbm_regressor.H2OGBMRegressor"]], "h2oglmregressor (class in maxaimodel.h2o.regression.h2o_glm_regressor)": [[23, "maxaimodel.H2O.regression.h2o_glm_regressor.H2OGLMRegressor"]], "h2oxgbregressor (class in maxaimodel.h2o.regression.h2o_xgb_regressor)": [[23, "maxaimodel.H2O.regression.h2o_xgb_regressor.H2OXGBRegressor"]], "build() (maxaimodel.h2o.regression.h2o_dl_regressor.h2odlregressor method)": [[23, "maxaimodel.H2O.regression.h2o_dl_regressor.H2ODLRegressor.build"]], "build() (maxaimodel.h2o.regression.h2o_drf_regressor.h2odrfregressor method)": [[23, "maxaimodel.H2O.regression.h2o_drf_regressor.H2ODRFRegressor.build"]], "build() (maxaimodel.h2o.regression.h2o_gam_regressor.h2ogamregressor method)": [[23, "maxaimodel.H2O.regression.h2o_gam_regressor.H2OGAMRegressor.build"]], "build() (maxaimodel.h2o.regression.h2o_gbm_regressor.h2ogbmregressor method)": [[23, "maxaimodel.H2O.regression.h2o_gbm_regressor.H2OGBMRegressor.build"]], "build() (maxaimodel.h2o.regression.h2o_glm_regressor.h2oglmregressor method)": [[23, "maxaimodel.H2O.regression.h2o_glm_regressor.H2OGLMRegressor.build"]], "build() (maxaimodel.h2o.regression.h2o_xgb_regressor.h2oxgbregressor method)": [[23, "maxaimodel.H2O.regression.h2o_xgb_regressor.H2OXGBRegressor.build"]], "maxaimodel.h2o.regression": [[23, "module-maxaimodel.H2O.regression"]], "maxaimodel.h2o.regression.h2o_dl_regressor": [[23, "module-maxaimodel.H2O.regression.h2o_dl_regressor"]], "maxaimodel.h2o.regression.h2o_drf_regressor": [[23, "module-maxaimodel.H2O.regression.h2o_drf_regressor"]], "maxaimodel.h2o.regression.h2o_gam_regressor": [[23, "module-maxaimodel.H2O.regression.h2o_gam_regressor"]], "maxaimodel.h2o.regression.h2o_gbm_regressor": [[23, "module-maxaimodel.H2O.regression.h2o_gbm_regressor"]], "maxaimodel.h2o.regression.h2o_glm_regressor": [[23, "module-maxaimodel.H2O.regression.h2o_glm_regressor"]], "maxaimodel.h2o.regression.h2o_xgb_regressor": [[23, "module-maxaimodel.H2O.regression.h2o_xgb_regressor"]], "optimise_model() (maxaimodel.h2o.regression.h2o_gam_regressor.h2ogamregressor method)": [[23, "maxaimodel.H2O.regression.h2o_gam_regressor.H2OGAMRegressor.optimise_model"]], "h2oisolationforestmax (class in maxaimodel.h2o.unsupervised.h2o_isolation_forest)": [[24, "maxaimodel.H2O.unsupervised.h2o_isolation_forest.H2OIsolationForestMAX"]], "build() (maxaimodel.h2o.unsupervised.h2o_isolation_forest.h2oisolationforestmax method)": [[24, "maxaimodel.H2O.unsupervised.h2o_isolation_forest.H2OIsolationForestMAX.build"]], "maxaimodel.h2o.unsupervised": [[24, "module-maxaimodel.H2O.unsupervised"]], "maxaimodel.h2o.unsupervised.h2o_isolation_forest": [[24, "module-maxaimodel.H2O.unsupervised.h2o_isolation_forest"]], "optimise_model() (maxaimodel.h2o.unsupervised.h2o_isolation_forest.h2oisolationforestmax method)": [[24, "maxaimodel.H2O.unsupervised.h2o_isolation_forest.H2OIsolationForestMAX.optimise_model"]], "maxaimodel.h2o.unsupervised.test": [[25, "module-maxaimodel.H2O.unsupervised.test"]], "maxaimodel.python": [[26, "module-maxaimodel.python"]], "arima (class in maxaimodel.python.timeseries.arima)": [[27, "maxaimodel.python.timeseries.arima.Arima"]], "fbprophet (class in maxaimodel.python.timeseries.prophet)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet"]], "garch (class in maxaimodel.python.timeseries.garch)": [[27, "maxaimodel.python.timeseries.garch.Garch"]], "nprophet (class in maxaimodel.python.timeseries.neuroprophet)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet"]], "build() (maxaimodel.python.timeseries.arima.arima method)": [[27, "maxaimodel.python.timeseries.arima.Arima.build"]], "build() (maxaimodel.python.timeseries.garch.garch method)": [[27, "maxaimodel.python.timeseries.garch.Garch.build"]], "build() (maxaimodel.python.timeseries.neuroprophet.nprophet method)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet.build"]], "build() (maxaimodel.python.timeseries.prophet.fbprophet method)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet.build"]], "fit() (maxaimodel.python.timeseries.arima.arima method)": [[27, "maxaimodel.python.timeseries.arima.Arima.fit"]], "fit() (maxaimodel.python.timeseries.garch.garch method)": [[27, "maxaimodel.python.timeseries.garch.Garch.fit"]], "fit() (maxaimodel.python.timeseries.neuroprophet.nprophet method)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet.fit"]], "fit() (maxaimodel.python.timeseries.prophet.fbprophet method)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet.fit"]], "get_event_df() (maxaimodel.python.timeseries.neuroprophet.nprophet method)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet.get_event_df"]], "get_holiday_df() (maxaimodel.python.timeseries.prophet.fbprophet method)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet.get_holiday_df"]], "get_model_diagnostics() (maxaimodel.python.timeseries.arima.arima method)": [[27, "maxaimodel.python.timeseries.arima.Arima.get_model_diagnostics"]], "get_model_diagnostics() (maxaimodel.python.timeseries.garch.garch method)": [[27, "maxaimodel.python.timeseries.garch.Garch.get_model_diagnostics"]], "get_model_diagnostics() (maxaimodel.python.timeseries.neuroprophet.nprophet method)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet.get_model_diagnostics"]], "get_model_diagnostics() (maxaimodel.python.timeseries.prophet.fbprophet method)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet.get_model_diagnostics"]], "get_params() (maxaimodel.python.timeseries.arima.arima method)": [[27, "maxaimodel.python.timeseries.arima.Arima.get_params"]], "get_params() (maxaimodel.python.timeseries.garch.garch method)": [[27, "maxaimodel.python.timeseries.garch.Garch.get_params"]], "get_params() (maxaimodel.python.timeseries.neuroprophet.nprophet method)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet.get_params"]], "get_params() (maxaimodel.python.timeseries.prophet.fbprophet method)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet.get_params"]], "load() (maxaimodel.python.timeseries.arima.arima method)": [[27, "maxaimodel.python.timeseries.arima.Arima.load"]], "load() (maxaimodel.python.timeseries.garch.garch method)": [[27, "maxaimodel.python.timeseries.garch.Garch.load"]], "load() (maxaimodel.python.timeseries.neuroprophet.nprophet method)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet.load"]], "load() (maxaimodel.python.timeseries.prophet.fbprophet method)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet.load"]], "maxaimodel.python.timeseries": [[27, "module-maxaimodel.python.timeseries"]], "maxaimodel.python.timeseries.arima": [[27, "module-maxaimodel.python.timeseries.arima"]], "maxaimodel.python.timeseries.garch": [[27, "module-maxaimodel.python.timeseries.garch"]], "maxaimodel.python.timeseries.neuroprophet": [[27, "module-maxaimodel.python.timeseries.neuroprophet"]], "maxaimodel.python.timeseries.prophet": [[27, "module-maxaimodel.python.timeseries.prophet"]], "predict() (maxaimodel.python.timeseries.arima.arima method)": [[27, "maxaimodel.python.timeseries.arima.Arima.predict"]], "predict() (maxaimodel.python.timeseries.garch.garch method)": [[27, "maxaimodel.python.timeseries.garch.Garch.predict"]], "predict() (maxaimodel.python.timeseries.neuroprophet.nprophet method)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet.predict"]], "predict() (maxaimodel.python.timeseries.prophet.fbprophet method)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet.predict"]], "save() (maxaimodel.python.timeseries.arima.arima method)": [[27, "maxaimodel.python.timeseries.arima.Arima.save"]], "save() (maxaimodel.python.timeseries.garch.garch method)": [[27, "maxaimodel.python.timeseries.garch.Garch.save"]], "save() (maxaimodel.python.timeseries.neuroprophet.nprophet method)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet.save"]], "save() (maxaimodel.python.timeseries.prophet.fbprophet method)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet.save"]], "training_framework (maxaimodel.python.timeseries.arima.arima attribute)": [[27, "maxaimodel.python.timeseries.arima.Arima.training_framework"]], "training_framework (maxaimodel.python.timeseries.garch.garch attribute)": [[27, "maxaimodel.python.timeseries.garch.Garch.training_framework"]], "training_framework (maxaimodel.python.timeseries.neuroprophet.nprophet attribute)": [[27, "maxaimodel.python.timeseries.neuroprophet.NProphet.training_framework"]], "training_framework (maxaimodel.python.timeseries.prophet.fbprophet attribute)": [[27, "maxaimodel.python.timeseries.prophet.FBProphet.training_framework"]], "maxaimodel.spark": [[28, "module-maxaimodel.spark"]], "maxaimodel.spark.classification": [[29, "module-maxaimodel.spark.classification"]], "maxaimodel.spark.clustering": [[30, "module-maxaimodel.spark.clustering"]], "maxaimodel.spark.recommendation": [[31, "module-maxaimodel.spark.recommendation"]], "maxaimodel.spark.regression": [[32, "module-maxaimodel.spark.regression"]], "dataprep (class in maxaimodel.spark.timeseries.xgb_ts)": [[33, "maxaimodel.spark.timeseries.xgb_ts.DataPrep"]], "sparktsforecaster (class in maxaimodel.spark.timeseries.spark_ts)": [[33, "maxaimodel.spark.timeseries.spark_ts.SparkTSForecaster"]], "xgbforecaster (class in maxaimodel.spark.timeseries.xgb_ts)": [[33, "maxaimodel.spark.timeseries.xgb_ts.XGBForecaster"]], "build() (maxaimodel.spark.timeseries.spark_ts.sparktsforecaster method)": [[33, "maxaimodel.spark.timeseries.spark_ts.SparkTSForecaster.build"]], "build() (maxaimodel.spark.timeseries.xgb_ts.xgbforecaster method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.XGBForecaster.build"]], "fit() (maxaimodel.spark.timeseries.spark_ts.sparktsforecaster method)": [[33, "maxaimodel.spark.timeseries.spark_ts.SparkTSForecaster.fit"]], "fit() (maxaimodel.spark.timeseries.xgb_ts.xgbforecaster method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.XGBForecaster.fit"]], "get_model_diagnostics() (maxaimodel.spark.timeseries.spark_ts.sparktsforecaster method)": [[33, "maxaimodel.spark.timeseries.spark_ts.SparkTSForecaster.get_model_diagnostics"]], "get_model_diagnostics() (maxaimodel.spark.timeseries.xgb_ts.xgbforecaster method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.XGBForecaster.get_model_diagnostics"]], "get_params() (maxaimodel.spark.timeseries.spark_ts.sparktsforecaster method)": [[33, "maxaimodel.spark.timeseries.spark_ts.SparkTSForecaster.get_params"]], "get_params() (maxaimodel.spark.timeseries.xgb_ts.xgbforecaster method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.XGBForecaster.get_params"]], "increment_datetime() (maxaimodel.spark.timeseries.xgb_ts.dataprep static method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.DataPrep.increment_datetime"]], "infer_frequency() (maxaimodel.spark.timeseries.xgb_ts.dataprep static method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.DataPrep.infer_frequency"]], "load() (maxaimodel.spark.timeseries.spark_ts.sparktsforecaster method)": [[33, "maxaimodel.spark.timeseries.spark_ts.SparkTSForecaster.load"]], "load() (maxaimodel.spark.timeseries.xgb_ts.xgbforecaster method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.XGBForecaster.load"]], "maxaimodel.spark.timeseries": [[33, "module-maxaimodel.spark.timeseries"]], "maxaimodel.spark.timeseries.spark_ts": [[33, "module-maxaimodel.spark.timeseries.spark_ts"]], "maxaimodel.spark.timeseries.xgb_ts": [[33, "module-maxaimodel.spark.timeseries.xgb_ts"]], "predict() (maxaimodel.spark.timeseries.spark_ts.sparktsforecaster method)": [[33, "maxaimodel.spark.timeseries.spark_ts.SparkTSForecaster.predict"]], "predict() (maxaimodel.spark.timeseries.xgb_ts.xgbforecaster method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.XGBForecaster.predict"]], "prepare_data() (maxaimodel.spark.timeseries.xgb_ts.dataprep static method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.DataPrep.prepare_data"]], "save() (maxaimodel.spark.timeseries.spark_ts.sparktsforecaster method)": [[33, "maxaimodel.spark.timeseries.spark_ts.SparkTSForecaster.save"]], "save() (maxaimodel.spark.timeseries.xgb_ts.xgbforecaster method)": [[33, "maxaimodel.spark.timeseries.xgb_ts.XGBForecaster.save"]], "maxairesources": [[34, "module-maxairesources"]], "noiseremoval (class in maxairesources.cleaning.noiseremoval)": [[35, "maxairesources.cleaning.NoiseRemoval.NoiseRemoval"]], "convert_timeformat() (maxairesources.cleaning.noiseremoval.noiseremoval method)": [[35, "maxairesources.cleaning.NoiseRemoval.NoiseRemoval.convert_timeformat"]], "determine_outlier_thersholds_std() (maxairesources.cleaning.noiseremoval.noiseremoval method)": [[35, "maxairesources.cleaning.NoiseRemoval.NoiseRemoval.determine_outlier_thersholds_std"]], "determine_outlier_thresholds_iqr() (maxairesources.cleaning.noiseremoval.noiseremoval method)": [[35, "maxairesources.cleaning.NoiseRemoval.NoiseRemoval.determine_outlier_thresholds_iqr"]], "drop_duplicates() (maxairesources.cleaning.noiseremoval.noiseremoval method)": [[35, "maxairesources.cleaning.NoiseRemoval.NoiseRemoval.drop_duplicates"]], "impute_null() (maxairesources.cleaning.noiseremoval.noiseremoval method)": [[35, "maxairesources.cleaning.NoiseRemoval.NoiseRemoval.impute_null"]], "maxairesources.cleaning": [[35, "module-maxairesources.cleaning"]], "maxairesources.cleaning.noiseremoval": [[35, "module-maxairesources.cleaning.NoiseRemoval"]], "outlier_detect() (maxairesources.cleaning.noiseremoval.noiseremoval method)": [[35, "maxairesources.cleaning.NoiseRemoval.NoiseRemoval.outlier_detect"]], "read_config() (maxairesources.cleaning.noiseremoval.noiseremoval method)": [[35, "maxairesources.cleaning.NoiseRemoval.NoiseRemoval.read_config"]], "remove_outlier() (maxairesources.cleaning.noiseremoval.noiseremoval method)": [[35, "maxairesources.cleaning.NoiseRemoval.NoiseRemoval.remove_outlier"]], "column_rename() (in module maxairesources.customer360.utility)": [[36, "maxairesources.customer360.utility.column_rename"]], "create_features() (in module maxairesources.customer360.utility)": [[36, "maxairesources.customer360.utility.create_features"]], "maxairesources.customer360": [[36, "module-maxairesources.customer360"]], "maxairesources.customer360.utility": [[36, "module-maxairesources.customer360.utility"]], "parse_arguments() (in module maxairesources.customer360.utility)": [[36, "maxairesources.customer360.utility.parse_arguments"]], "prepare_agg_arguments() (in module maxairesources.customer360.utility)": [[36, "maxairesources.customer360.utility.prepare_agg_arguments"]], "todatetype() (in module maxairesources.customer360.utility)": [[36, "maxairesources.customer360.utility.toDateType"]], "analysisbase (class in maxairesources.datachecks.analysis_base)": [[37, "maxairesources.datachecks.analysis_base.AnalysisBase"]], "sparkdataframeanalyser (class in maxairesources.datachecks.dataframe_analysis_spark)": [[37, "maxairesources.datachecks.dataframe_analysis_spark.SparkDataFrameAnalyser"]], "compare_reports() (maxairesources.datachecks.analysis_base.analysisbase method)": [[37, "maxairesources.datachecks.analysis_base.AnalysisBase.compare_reports"]], "compare_reports() (maxairesources.datachecks.dataframe_analysis_spark.sparkdataframeanalyser method)": [[37, "maxairesources.datachecks.dataframe_analysis_spark.SparkDataFrameAnalyser.compare_reports"]], "default_behaviours (maxairesources.datachecks.dataframe_analysis_spark.sparkdataframeanalyser attribute)": [[37, "maxairesources.datachecks.dataframe_analysis_spark.SparkDataFrameAnalyser.default_behaviours"]], "default_thresholds (maxairesources.datachecks.dataframe_analysis_spark.sparkdataframeanalyser attribute)": [[37, "maxairesources.datachecks.dataframe_analysis_spark.SparkDataFrameAnalyser.default_thresholds"]], "generate_data_health_report() (maxairesources.datachecks.analysis_base.analysisbase method)": [[37, "maxairesources.datachecks.analysis_base.AnalysisBase.generate_data_health_report"]], "generate_data_health_report() (maxairesources.datachecks.dataframe_analysis_spark.sparkdataframeanalyser method)": [[37, "maxairesources.datachecks.dataframe_analysis_spark.SparkDataFrameAnalyser.generate_data_health_report"]], "get_column_types() (maxairesources.datachecks.analysis_base.analysisbase method)": [[37, "maxairesources.datachecks.analysis_base.AnalysisBase.get_column_types"]], "maxairesources.datachecks": [[37, "module-maxairesources.datachecks"]], "maxairesources.datachecks.analysis_base": [[37, "module-maxairesources.datachecks.analysis_base"]], "maxairesources.datachecks.dataframe_analysis_spark": [[37, "module-maxairesources.datachecks.dataframe_analysis_spark"]], "save_analysis_report() (maxairesources.datachecks.analysis_base.analysisbase method)": [[37, "maxairesources.datachecks.analysis_base.AnalysisBase.save_analysis_report"]], "validate_report() (maxairesources.datachecks.analysis_base.analysisbase method)": [[37, "maxairesources.datachecks.analysis_base.AnalysisBase.validate_report"]], "validate_report() (maxairesources.datachecks.dataframe_analysis_spark.sparkdataframeanalyser method)": [[37, "maxairesources.datachecks.dataframe_analysis_spark.SparkDataFrameAnalyser.validate_report"]], "maxairesources.datachecks.test": [[38, "module-maxairesources.datachecks.test"]], "maxairesources.datachecks.test.test_dataframe_analysis_spark": [[38, "module-maxairesources.datachecks.test.test_dataframe_analysis_spark"]], "test_binary_classification_report_spark() (in module maxairesources.datachecks.test.test_dataframe_analysis_spark)": [[38, "maxairesources.datachecks.test.test_dataframe_analysis_spark.test_binary_classification_report_spark"]], "ensemble (class in maxairesources.ensemble.ensemble)": [[39, "maxairesources.ensemble.ensemble.Ensemble"]], "votingclassifier() (maxairesources.ensemble.ensemble.ensemble method)": [[39, "maxairesources.ensemble.ensemble.Ensemble.VotingClassifier"]], "votingregressor() (maxairesources.ensemble.ensemble.ensemble method)": [[39, "maxairesources.ensemble.ensemble.Ensemble.VotingRegressor"]], "maxairesources.ensemble": [[39, "module-maxairesources.ensemble"]], "maxairesources.ensemble.ensemble": [[39, "module-maxairesources.ensemble.ensemble"]], "predict() (maxairesources.ensemble.ensemble.ensemble method)": [[39, "maxairesources.ensemble.ensemble.Ensemble.predict"]], "classifierevaluator (class in maxairesources.eval.classifier_evaluator_spark)": [[40, "maxairesources.eval.classifier_evaluator_spark.ClassifierEvaluator"]], "regressorevaluator (class in maxairesources.eval.regressor_evaluator_spark)": [[40, "maxairesources.eval.regressor_evaluator_spark.RegressorEvaluator"]], "general_regression_report_spark() (maxairesources.eval.regressor_evaluator_spark.regressorevaluator method)": [[40, "maxairesources.eval.regressor_evaluator_spark.RegressorEvaluator.general_regression_report_spark"]], "get_evaluation_report() (maxairesources.eval.classifier_evaluator_spark.classifierevaluator method)": [[40, "maxairesources.eval.classifier_evaluator_spark.ClassifierEvaluator.get_evaluation_report"]], "get_evaluation_report() (maxairesources.eval.regressor_evaluator_spark.regressorevaluator method)": [[40, "maxairesources.eval.regressor_evaluator_spark.RegressorEvaluator.get_evaluation_report"]], "maxairesources.eval": [[40, "module-maxairesources.eval"]], "maxairesources.eval.classifier_evaluator_spark": [[40, "module-maxairesources.eval.classifier_evaluator_spark"]], "maxairesources.eval.regressor_evaluator_spark": [[40, "module-maxairesources.eval.regressor_evaluator_spark"]], "datasourcenotdefinederror": [[41, "maxairesources.exception.exceptions.DataSourceNotDefinedError"]], "featuretransformexception": [[41, "maxairesources.exception.exceptions.FeatureTransformException"]], "maxaiexception": [[41, "maxairesources.exception.exceptions.MaxAIException"]], "missingenvironmentvariable": [[41, "maxairesources.exception.exceptions.MissingEnvironmentVariable"]], "modelloadexception": [[41, "maxairesources.exception.exceptions.ModelLoadException"]], "modelnotimplemented": [[41, "maxairesources.exception.exceptions.ModelNotImplemented"]], "modelsaveexception": [[41, "maxairesources.exception.exceptions.ModelSaveException"]], "modeltrainexception": [[41, "maxairesources.exception.exceptions.ModelTrainException"]], "modeltypenotdefinedexception": [[41, "maxairesources.exception.exceptions.ModelTypeNotDefinedException"]], "portinformationnotfounderror": [[41, "maxairesources.exception.exceptions.PortInformationNotFoundError"]], "unknownoperationmode": [[41, "maxairesources.exception.exceptions.UnknownOperationMode"]], "geterrormessage() (maxairesources.exception.exceptions.maxaiexception method)": [[41, "maxairesources.exception.exceptions.MaxAIException.getErrorMessage"]], "maxairesources.exception": [[41, "module-maxairesources.exception"]], "maxairesources.exception.exceptions": [[41, "module-maxairesources.exception.exceptions"]], "modelfactory (class in maxairesources.factory.model_factory)": [[42, "maxairesources.factory.model_factory.ModelFactory"]], "get_model() (maxairesources.factory.model_factory.modelfactory class method)": [[42, "maxairesources.factory.model_factory.ModelFactory.get_model"]], "import_submodules() (in module maxairesources.factory)": [[42, "maxairesources.factory.import_submodules"]], "maxairesources.factory": [[42, "module-maxairesources.factory"]], "maxairesources.factory.model_factory": [[42, "module-maxairesources.factory.model_factory"]], "register_model() (maxairesources.factory.model_factory.modelfactory class method)": [[42, "maxairesources.factory.model_factory.ModelFactory.register_model"]], "customadapter (class in maxairesources.logging.logger)": [[43, "maxairesources.logging.logger.CustomAdapter"]], "get_file_handler() (in module maxairesources.logging.logger)": [[43, "maxairesources.logging.logger.get_file_handler"]], "get_logger() (in module maxairesources.logging.logger)": [[43, "maxairesources.logging.logger.get_logger"]], "get_stream_handler() (in module maxairesources.logging.logger)": [[43, "maxairesources.logging.logger.get_stream_handler"]], "maxairesources.logging": [[43, "module-maxairesources.logging"]], "maxairesources.logging.logger": [[43, "module-maxairesources.logging.logger"]], "process() (maxairesources.logging.logger.customadapter method)": [[43, "maxairesources.logging.logger.CustomAdapter.process"]], "modelapprover (class in maxairesources.model_approval.model_approver_spark)": [[44, "maxairesources.model_approval.model_approver_spark.ModelApprover"]], "is_above_threshold() (maxairesources.model_approval.model_approver_spark.modelapprover method)": [[44, "maxairesources.model_approval.model_approver_spark.ModelApprover.is_above_threshold"]], "maxairesources.model_approval": [[44, "module-maxairesources.model_approval"]], "maxairesources.model_approval.model_approver_spark": [[44, "module-maxairesources.model_approval.model_approver_spark"]], "maxairesources.optimizer": [[45, "module-maxairesources.optimizer"]], "sparktransformerfactory (class in maxairesources.pipeline.pipeline_factory)": [[46, "maxairesources.pipeline.pipeline_factory.SparkTransformerFactory"]], "get_transformer() (maxairesources.pipeline.pipeline_factory.sparktransformerfactory method)": [[46, "maxairesources.pipeline.pipeline_factory.SparkTransformerFactory.get_transformer"]], "maxairesources.pipeline": [[46, "module-maxairesources.pipeline"]], "maxairesources.pipeline.pipeline_factory": [[46, "module-maxairesources.pipeline.pipeline_factory"]], "register_transformer() (maxairesources.pipeline.pipeline_factory.sparktransformerfactory method)": [[46, "maxairesources.pipeline.pipeline_factory.SparkTransformerFactory.register_transformer"]], "encryption (class in maxairesources.utilities.encryption)": [[47, "maxairesources.utilities.encryption.Encryption"]], "multitrain (class in maxairesources.utilities.multi_train)": [[47, "maxairesources.utilities.multi_train.MultiTrain"]], "preprocessing (class in maxairesources.utilities.preprocessing)": [[47, "maxairesources.utilities.preprocessing.Preprocessing"]], "sparkdistributor (class in maxairesources.utilities.spark_distributor)": [[47, "maxairesources.utilities.spark_distributor.SparkDistributor"]], "traintestsplit (class in maxairesources.utilities.train_test_split)": [[47, "maxairesources.utilities.train_test_split.TrainTestSplit"]], "aggregate_transactional_data() (maxairesources.utilities.preprocessing.preprocessing method)": [[47, "maxairesources.utilities.preprocessing.Preprocessing.aggregate_transactional_data"]], "decrypt() (maxairesources.utilities.encryption.encryption static method)": [[47, "maxairesources.utilities.encryption.Encryption.decrypt"]], "decrypt_columns() (maxairesources.utilities.encryption.encryption static method)": [[47, "maxairesources.utilities.encryption.Encryption.decrypt_columns"]], "encrypt() (maxairesources.utilities.encryption.encryption static method)": [[47, "maxairesources.utilities.encryption.Encryption.encrypt"]], "encrypt_columns() (maxairesources.utilities.encryption.encryption static method)": [[47, "maxairesources.utilities.encryption.Encryption.encrypt_columns"]], "get_run_id_timestamp() (in module maxairesources.utilities.misc)": [[47, "maxairesources.utilities.misc.get_run_id_timestamp"]], "maxairesources.utilities": [[47, "module-maxairesources.utilities"]], "maxairesources.utilities.common_utils": [[47, "module-maxairesources.utilities.common_utils"]], "maxairesources.utilities.encryption": [[47, "module-maxairesources.utilities.encryption"]], "maxairesources.utilities.misc": [[47, "module-maxairesources.utilities.misc"]], "maxairesources.utilities.multi_train": [[47, "module-maxairesources.utilities.multi_train"]], "maxairesources.utilities.preprocessing": [[47, "module-maxairesources.utilities.preprocessing"]], "maxairesources.utilities.spark_distributor": [[47, "module-maxairesources.utilities.spark_distributor"]], "maxairesources.utilities.train_test_split": [[47, "module-maxairesources.utilities.train_test_split"]], "overwrite_dict() (in module maxairesources.utilities.misc)": [[47, "maxairesources.utilities.misc.overwrite_dict"]], "pandas_to_spark_wrapper() (maxairesources.utilities.spark_distributor.sparkdistributor method)": [[47, "maxairesources.utilities.spark_distributor.SparkDistributor.pandas_to_spark_wrapper"]], "predict() (maxairesources.utilities.multi_train.multitrain method)": [[47, "maxairesources.utilities.multi_train.MultiTrain.predict"]], "random_split() (maxairesources.utilities.train_test_split.traintestsplit method)": [[47, "maxairesources.utilities.train_test_split.TrainTestSplit.random_split"]], "stratified_split() (maxairesources.utilities.train_test_split.traintestsplit method)": [[47, "maxairesources.utilities.train_test_split.TrainTestSplit.stratified_split"]], "time_series_split() (maxairesources.utilities.train_test_split.traintestsplit method)": [[47, "maxairesources.utilities.train_test_split.TrainTestSplit.time_series_split"]], "train_models() (maxairesources.utilities.multi_train.multitrain method)": [[47, "maxairesources.utilities.multi_train.MultiTrain.train_models"]], "train_test_split() (maxairesources.utilities.train_test_split.traintestsplit method)": [[47, "maxairesources.utilities.train_test_split.TrainTestSplit.train_test_split"]], "trained_models (maxairesources.utilities.multi_train.multitrain property)": [[47, "maxairesources.utilities.multi_train.MultiTrain.trained_models"]], "write_file_to_s3() (in module maxairesources.utilities.common_utils)": [[47, "maxairesources.utilities.common_utils.write_file_to_s3"]], "maxairesources.utilities.tests": [[48, "module-maxairesources.utilities.tests"]]}})